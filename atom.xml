<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>建均笔记</title>
  
  <subtitle>不积跬步 无以至千里</subtitle>
  <link href="http://www.uto.ink/atom.xml" rel="self"/>
  
  <link href="http://www.uto.ink/"/>
  <updated>2024-02-28T06:45:37.253Z</updated>
  <id>http://www.uto.ink/</id>
  
  <author>
    <name>建均笔记</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Podman容器开机自启动</title>
    <link href="http://www.uto.ink/2024/02/28/podman-autorun/"/>
    <id>http://www.uto.ink/2024/02/28/podman-autorun/</id>
    <published>2024-02-28T06:39:15.000Z</published>
    <updated>2024-02-28T06:45:37.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ROOT用户启动容器"><a href="#ROOT用户启动容器" class="headerlink" title="ROOT用户启动容器"></a>ROOT用户启动容器</h2><ol><li>启动一个容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># podman run -d --name web httpd</span><br></pre></td></tr></table></figure></li><li>查看该容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># podman ps</span><br></pre></td></tr></table></figure></li><li>每次都启动新容器方式创建servcie //–new参数，每次启动都删除旧容器，启动一个新容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># podman generate systemd -n --new -f web</span><br></pre></td></tr></table></figure></li><li>将service文件保存在/etc/systemd/system/<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mv container-web.service /etc/systemd/system/</span><br></pre></td></tr></table></figure></li><li>刷新配置文件，让其生效<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl daemon-reload</span><br></pre></td></tr></table></figure></li><li>修改selinux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cat config |grep SELINUX=disabled</span><br></pre></td></tr></table></figure></li><li>设置容器开机自启，并且现在启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl enable --now /etc/systemd/system/container-web.service</span><br></pre></td></tr></table></figure></li><li>测试，重启虚拟机<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># reboot</span><br></pre></td></tr></table></figure></li><li>查看容器是否在运行，并查看container-web.service是否开机自启和运行<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># systemctl status container-web.service</span><br><span class="line"># podman ps</span><br></pre></td></tr></table></figure></li></ol><h2 id="rootless模式启动容器"><a href="#rootless模式启动容器" class="headerlink" title="rootless模式启动容器"></a>rootless模式启动容器</h2><ol><li>创建~/.config/systemd/user/目录来存储unit文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir -p ~/.config/systemd/user/</span><br></pre></td></tr></table></figure></li><li>查看该容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># podman ps</span><br></pre></td></tr></table></figure></li><li>每次都启动新容器方式创建servcie //–new参数，每次启动都删除旧容器，启动一个新容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># podman generate systemd -n --new -f web</span><br></pre></td></tr></table></figure></li><li>将service文件保存在~/.config/systemd/user/<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mv container-web.service ~/.config/systemd/user/</span><br></pre></td></tr></table></figure></li><li>刷新配置文件，让其生效<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl --user daemon-reload</span><br></pre></td></tr></table></figure></li><li>修改selinux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cat config |grep SELINUX=disabled</span><br></pre></td></tr></table></figure></li><li>设置容器开机自启，并且现在启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl --user enable --now ~/.config/systemd/user/container-web.service</span><br></pre></td></tr></table></figure></li><li>测试启动容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl --user restart container-web.service</span><br></pre></td></tr></table></figure></li><li>查看容器是否在运行，并查看container-web.service是否开机自启和运行<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># systemctl --user status container-web.service</span><br><span class="line"># podman ps</span><br></pre></td></tr></table></figure></li></ol><p><code>注意：</code> systemd使用systemctl命令管理这些服务当用户服务类型为非根用户时，通过文本或图形控制台或使用SSH打开第一个会话时， 该服务将自动启动。当关闭最后一次会话时，服务将停止。<br>这种行为与系统服务不同，系统服务在系统启动时启动，在系统关闭时停止。但也可以更改此默认行为，通过运行loginctl enable-linger命令强制service在服务器启动时启动并在关闭时停止。<br>逆向操作,请使用loginctl disable-linger命令。查看当前状态，使用loginctl show-user username命令。</p><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ROOT用户启动容器&quot;&gt;&lt;a href=&quot;#ROOT用户启动容器&quot; class=&quot;headerlink&quot; title=&quot;ROOT用户启动容器&quot;&gt;&lt;/a&gt;ROOT用户启动容器&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;启动一个容器&lt;figure class=&quot;highlight p</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="podman" scheme="http://www.uto.ink/tags/podman/"/>
    
  </entry>
  
  <entry>
    <title>Docker与Podman在容器内获取宿主机网络IP</title>
    <link href="http://www.uto.ink/2024/02/28/docker-podman-host-ip/"/>
    <id>http://www.uto.ink/2024/02/28/docker-podman-host-ip/</id>
    <published>2024-02-28T06:38:13.000Z</published>
    <updated>2024-02-28T06:46:07.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker使用host-getway"><a href="#Docker使用host-getway" class="headerlink" title="Docker使用host-getway"></a>Docker使用host-getway</h2><p>docker需要在创建容器时加入桥接地址为外部host，容器内则可通过桥接地址来访问宿主机的网络。</p><ul><li>docker创建时增加 <code>--add-host &lt;hostname&gt;:&lt;ip&gt;</code>，如：<code>--add-host host.docker.internal:host-gateway</code></li><li>docker-compose.yml中增加<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">extra_hosts:</span><br><span class="line">  - &quot;host.docker.internal:host-gateway&quot;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Podman容器"><a href="#Podman容器" class="headerlink" title="Podman容器"></a>Podman容器</h2><p>podman在创建容器时会在容器中/etc/hosts文件内加入一个宿主机的host，使用<code>host.containers.internal</code>由可以访问到宿主机的网络</p><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker使用host-getway&quot;&gt;&lt;a href=&quot;#Docker使用host-getway&quot; class=&quot;headerlink&quot; title=&quot;Docker使用host-getway&quot;&gt;&lt;/a&gt;Docker使用host-getway&lt;/h2&gt;&lt;p&gt;do</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Docker" scheme="http://www.uto.ink/tags/Docker/"/>
    
    <category term="podman" scheme="http://www.uto.ink/tags/podman/"/>
    
  </entry>
  
  <entry>
    <title>Docker与Podman日志大小设置</title>
    <link href="http://www.uto.ink/2024/02/28/docker-podman-log-opt/"/>
    <id>http://www.uto.ink/2024/02/28/docker-podman-log-opt/</id>
    <published>2024-02-28T06:36:17.000Z</published>
    <updated>2024-02-28T06:46:56.244Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker限制容器日志大小"><a href="#Docker限制容器日志大小" class="headerlink" title="Docker限制容器日志大小"></a>Docker限制容器日志大小</h2><p>日志存储路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">以限制50mb为例，配置以下内容</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;50m&quot;,</span><br><span class="line">    &quot;max-file&quot;: 3</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>注意：</code>设置的日志大小，只对新建的容器有效。已存在的容器不会生效，需要重建才可以.</p><h2 id="Podman限制容器日志大小"><a href="#Podman限制容器日志大小" class="headerlink" title="Podman限制容器日志大小"></a>Podman限制容器日志大小</h2><h3 id="root用户下启动的容器"><a href="#root用户下启动的容器" class="headerlink" title="root用户下启动的容器"></a>root用户下启动的容器</h3><p>日志存储路径： /var/lib/containers/storage/overlay-containers/[CONTAINER_ID]/userdata/ctr.log</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/containers/containers.conf</span><br><span class="line">以限制10mb为例，配置以下内容</span><br><span class="line"></span><br><span class="line">[containers]</span><br><span class="line">log_size_max=10485760</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="rootless下启动的容器"><a href="#rootless下启动的容器" class="headerlink" title="rootless下启动的容器"></a>rootless下启动的容器</h3><p>日志存储路径： $HOME/.local/share/containers/storage/overlay-containers/[CONTAINER_ID]/userdata/log/ctr.log</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$HOME/.config/containers/containers.conf</span><br><span class="line">以限制10mb为例，配置以下内容</span><br><span class="line"></span><br><span class="line">[containers]</span><br><span class="line">log_size_max=10485760</span><br></pre></td></tr></table></figure><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker限制容器日志大小&quot;&gt;&lt;a href=&quot;#Docker限制容器日志大小&quot; class=&quot;headerlink&quot; title=&quot;Docker限制容器日志大小&quot;&gt;&lt;/a&gt;Docker限制容器日志大小&lt;/h2&gt;&lt;p&gt;日志存储路径：&lt;/p&gt;
&lt;figure cl</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Docker" scheme="http://www.uto.ink/tags/Docker/"/>
    
    <category term="podman" scheme="http://www.uto.ink/tags/podman/"/>
    
  </entry>
  
  <entry>
    <title>MySQL备份与恢复</title>
    <link href="http://www.uto.ink/2023/03/01/mysql-backup-restore/"/>
    <id>http://www.uto.ink/2023/03/01/mysql-backup-restore/</id>
    <published>2023-03-01T03:42:20.000Z</published>
    <updated>2024-02-28T06:35:25.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL备份"><a href="#MySQL备份" class="headerlink" title="MySQL备份"></a>MySQL备份</h2><p>方案一：将mysql整个数据目录备份,默认在/var/lib/mysql下，可通过my.conf指定<br>方案二：通过mysqldump命名备份成sql</p><h3 id="通过mysqldump备份成sql"><a href="#通过mysqldump备份成sql" class="headerlink" title="通过mysqldump备份成sql"></a>通过mysqldump备份成sql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ mysqldump -uroot -p --default-character-set=utf8 --set-charset=<span class="literal">false</span> --hex-blob --databases db_basic db_boss --result-file=service_module_db_init.sql</span><br></pre></td></tr></table></figure><p>ps: 如果需要替换则可通过sed正则替换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sed -i <span class="string">&quot;s/原内容/新内容/g&quot;</span> service_module_db_init.sql</span><br><span class="line">wujianjun@wujianjun-work:~$ find . -<span class="built_in">type</span> f -name <span class="string">&quot;app&quot;</span> -<span class="built_in">exec</span> sh &#123;&#125; restart \; <span class="comment">#批量执行shell</span></span><br></pre></td></tr></table></figure><h3 id="通过mysql命令恢复备份文件"><a href="#通过mysql命令恢复备份文件" class="headerlink" title="通过mysql命令恢复备份文件"></a>通过mysql命令恢复备份文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ mysql -uroot -p --default-character-set=utf8 &lt; service_module_db_init.sql</span><br></pre></td></tr></table></figure><h2 id="忘记MySQL的root密码后修改密码"><a href="#忘记MySQL的root密码后修改密码" class="headerlink" title="忘记MySQL的root密码后修改密码"></a>忘记MySQL的root密码后修改密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ service mysql stop</span><br><span class="line">wujianjun@wujianjun-work:~$ mysqld --console --skip-grant-tables --shared-memory</span><br><span class="line">wujianjun@wujianjun-work:~$ mysql -u root -p</span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;新密码&#x27;;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; exit</span><br><span class="line">wujianjun@wujianjun-work:~$ service mysql start</span><br></pre></td></tr></table></figure><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MySQL备份&quot;&gt;&lt;a href=&quot;#MySQL备份&quot; class=&quot;headerlink&quot; title=&quot;MySQL备份&quot;&gt;&lt;/a&gt;MySQL备份&lt;/h2&gt;&lt;p&gt;方案一：将mysql整个数据目录备份,默认在/var/lib/mysql下，可通过my.conf指定</summary>
      
    
    
    
    
    <category term="MySQL" scheme="http://www.uto.ink/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux下硬盘的一些操作</title>
    <link href="http://www.uto.ink/2023/02/09/linux-disk-resize/"/>
    <id>http://www.uto.ink/2023/02/09/linux-disk-resize/</id>
    <published>2023-02-09T14:33:31.000Z</published>
    <updated>2024-02-28T06:35:25.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux环境信息"><a href="#Linux环境信息" class="headerlink" title="Linux环境信息"></a>Linux环境信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ cat /etc/os-release</span><br><span class="line">PRETTY_NAME=&quot;Ubuntu 22.04.1 LTS&quot;</span><br><span class="line">NAME=&quot;Ubuntu&quot;</span><br><span class="line">VERSION_ID=&quot;22.04&quot;</span><br><span class="line">VERSION=&quot;22.04.1 LTS (Jammy Jellyfish)&quot;</span><br><span class="line">VERSION_CODENAME=jammy</span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">HOME_URL=&quot;https://www.ubuntu.com/&quot;</span><br><span class="line">SUPPORT_URL=&quot;https://help.ubuntu.com/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br><span class="line">PRIVACY_POLICY_URL=&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br><span class="line">UBUNTU_CODENAME=jammy</span><br></pre></td></tr></table></figure><h2 id="同一硬盘逻辑分区扩容"><a href="#同一硬盘逻辑分区扩容" class="headerlink" title="同一硬盘逻辑分区扩容"></a>同一硬盘逻辑分区扩容</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ fdisk -l #查看系统硬盘信息</span><br><span class="line">wujianjun@wujianjun-work:~$ lsblk #查看硬盘分区及容量情况</span><br><span class="line">wujianjun@wujianjun-work:~$ df -hT #查看挂载情况</span><br><span class="line">wujianjun@wujianjun-work:~$ lvdisplay #查看逻辑分区情况</span><br><span class="line">wujianjun@wujianjun-work:~$ lvextend -L +1643.2G /dev/ubuntu-vg/ubuntu-lv #/dev/ubuntu-vg/ubuntu-lv为lvdisplay中展示的LV Path</span><br><span class="line">wujianjun@wujianjun-work:~$ resize2fs /dev/ubuntu-vg/ubuntu-lv #重新加载逻辑卷</span><br></pre></td></tr></table></figure><h2 id="删除硬盘分区"><a href="#删除硬盘分区" class="headerlink" title="删除硬盘分区"></a>删除硬盘分区</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ lsblk #查看硬盘分区及容量情况</span><br><span class="line">root@gigatech-linux:~# fdisk /dev/sdb #/dev/sdb为fdisk -l中的硬盘名</span><br><span class="line">Welcome to fdisk (util-linux 2.37.2).</span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Command (m for help): d</span><br><span class="line">Selected partition 1</span><br><span class="line">Partition 1 has been deleted.</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h2 id="增加硬盘分区"><a href="#增加硬盘分区" class="headerlink" title="增加硬盘分区"></a>增加硬盘分区</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ lsblk #查看硬盘分区及容量情况</span><br><span class="line">wujianjun@wujianjun-work:~$ fdisk /dev/sdb</span><br><span class="line">Welcome to fdisk (util-linux 2.37.2).</span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): e</span><br><span class="line">Partition number (1-4, default 1):</span><br><span class="line">First sector (2048-3907029167, default 2048):</span><br><span class="line">Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-3907029167, default 3907029167):</span><br><span class="line"></span><br><span class="line">Created a new partition 1 of type &#x27;Extended&#x27; and of size 1.8 TiB.</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br><span class="line">wujianjun@wujianjun-work:~$ mkfs -t ext4 /dev/sdb1 #对新区进行格式化</span><br></pre></td></tr></table></figure><h2 id="根分区扩容加装硬盘（当根分区为lvm时可行）"><a href="#根分区扩容加装硬盘（当根分区为lvm时可行）" class="headerlink" title="根分区扩容加装硬盘（当根分区为lvm时可行）"></a>根分区扩容加装硬盘（当根分区为lvm时可行）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ vgdisplay -v #查看卷分组</span><br><span class="line">wujianjun@wujianjun-work:~$ pvcreate /dev/sdb1 #创建物理卷，pvdisplay查看创建结果</span><br><span class="line">wujianjun@wujianjun-work:~$ vgextend ubuntu-vg /dev/sdb1 #将物理卷添加到根分区所属卷分组，券分组为vgdisplay的VG Name</span><br><span class="line">wujianjun@wujianjun-work:~$ lvextend -L +256G /dev/ubuntu-vg/ubuntu-lv #扩展lvm容量</span><br><span class="line">wujianjun@wujianjun-work:~$ resize2fs /dev/ubuntu-vg/ubuntu-lv #重新加载逻辑卷</span><br></pre></td></tr></table></figure><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Linux环境信息&quot;&gt;&lt;a href=&quot;#Linux环境信息&quot; class=&quot;headerlink&quot; title=&quot;Linux环境信息&quot;&gt;&lt;/a&gt;Linux环境信息&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN系列三之账号密码认证</title>
    <link href="http://www.uto.ink/2022/08/04/openvpn-checkpwd/"/>
    <id>http://www.uto.ink/2022/08/04/openvpn-checkpwd/</id>
    <published>2022-08-04T06:53:36.000Z</published>
    <updated>2024-02-28T06:35:25.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>基于vpn的敏感性及人员的流动性，要进一步加强访问的安全性。OpenVPN支持配置账号密码认证。</p><h2 id="OpenVPN服务端配置修改"><a href="#OpenVPN服务端配置修改" class="headerlink" title="OpenVPN服务端配置修改"></a>OpenVPN服务端配置修改</h2><ol><li><p>增加验证配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# vi /etc/openvpn/server/server.conf</span><br></pre></td></tr></table></figure><p>在配置文件末尾增加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">script-security 3</span><br><span class="line">auth-user-pass-verify checkpsw.sh via-env</span><br><span class="line">username-as-common-name</span><br><span class="line">client-cert-not-required</span><br></pre></td></tr></table></figure></li><li><p>增加账号验证脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# vi /etc/openvpn/server/checkpsw.sh</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">###########################################################</span><br><span class="line"># checkpsw.sh (C) 2004 Mathias Sundman &lt;mathias@open***.se&gt;</span><br><span class="line">#</span><br><span class="line"># This script will authenticate Open××× users against</span><br><span class="line"># a plain text file. The passfile should simply contain</span><br><span class="line"># one row per user with the username first followed by</span><br><span class="line"># one or more space(s) or tab(s) and then the password.</span><br><span class="line"></span><br><span class="line">PASSFILE=&quot;/etc/openvpn/server/psw-file&quot;</span><br><span class="line">LOG_FILE=&quot;/var/log/openvpn/openvpn-password.log&quot;</span><br><span class="line">TIME_STAMP=`date &quot;+%Y-%m-%d %T&quot;`</span><br><span class="line"></span><br><span class="line">###########################################################</span><br><span class="line"></span><br><span class="line">if [ ! -r &quot;$&#123;PASSFILE&#125;&quot; ]; then</span><br><span class="line">  echo &quot;$&#123;TIME_STAMP&#125;: Could not open password file \&quot;$&#123;PASSFILE&#125;\&quot; for reading.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">CORRECT_PASSWORD=`awk &#x27;!/^;/&amp;&amp;!/^#/&amp;&amp;$1==&quot;&#x27;$&#123;username&#125;&#x27;&quot;&#123;print $2;exit&#125;&#x27; $&#123;PASSFILE&#125;`</span><br><span class="line"></span><br><span class="line">if [ &quot;$&#123;CORRECT_PASSWORD&#125;&quot; = &quot;&quot; ]; then</span><br><span class="line">  echo &quot;$&#123;TIME_STAMP&#125;: User does not exist: username=\&quot;$&#123;username&#125;\&quot;, password=\&quot;$&#123;password&#125;\&quot;.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;$&#123;password&#125;--$&#123;CORRECT_PASSWORD&#125;&quot; &gt;&gt; $&#123;LOG_FILE&#125;</span><br><span class="line"></span><br><span class="line">if [ &quot;$&#123;password&#125;&quot; = &quot;$&#123;CORRECT_PASSWORD&#125;&quot; ]; then</span><br><span class="line">  echo &quot;$&#123;TIME_STAMP&#125;: Successful authentication: username=\&quot;$&#123;username&#125;\&quot;.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</span><br><span class="line">  exit 0</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;$&#123;TIME_STAMP&#125;: Incorrect password: username=\&quot;$&#123;username&#125;\&quot;, password=\&quot;$&#123;password&#125;\&quot;.&quot; &gt;&gt; $&#123;LOG_FILE&#125;</span><br><span class="line">exit 1</span><br></pre></td></tr></table></figure></li><li><p>增加账号配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# vi /etc/openvpn/server/checkpsw.sh</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#account password</span><br><span class="line">test 123</span><br></pre></td></tr></table></figure></li><li><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# sudo systemctl restart openvpn-server@server.service</span><br></pre></td></tr></table></figure></li></ol><p>客户机再次尝试连接vpn时则会提示输入认证账号</p><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;基于vpn的敏感性及人员的流动性，要进一步加强访问的安全性。OpenVPN支持配置账号密码认证。&lt;/p&gt;
&lt;h2 id=&quot;OpenVPN服务</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="OpenVPN" scheme="http://www.uto.ink/tags/OpenVPN/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN系列二之外网映射</title>
    <link href="http://www.uto.ink/2022/08/04/openvpn-network/"/>
    <id>http://www.uto.ink/2022/08/04/openvpn-network/</id>
    <published>2022-08-04T06:11:29.000Z</published>
    <updated>2024-02-28T06:35:25.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>按<img src="/2022/08/04/openvpn-install" alt="OpenVPN系列一之安装配置">配置好之后，需要做以下两件事情才能让客户机正常使用</p><ul><li>OpenVPN服务器1194端口映射到外网，则客户机通过外网就能连接上vpn</li><li>内网服务器能访问到OpenVPN的子网内的客户机</li></ul><p>以上两步需要在路由上进行设置</p><h2 id="服务器环境参数"><a href="#服务器环境参数" class="headerlink" title="服务器环境参数"></a>服务器环境参数</h2><table><thead><tr><th>序号</th><th>设备名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>路由器</td><td>10.84.102.1</td><td>H3C专线路由器</td></tr><tr><td>2</td><td>Vpn服务器</td><td>10.84.102.131</td><td>搭建20.04 LTS操作系统</td></tr><tr><td>3</td><td>服务器1</td><td>10.84.102.90</td><td>内网服务器</td></tr></tbody></table><p>所涉及到的软件为：<br>OpenVPN 2.4.7（服务端）<br>Tunnelblick 3.8.7a（客户机软件）</p><h2 id="OpenVPN服务器1194端口映射到外网"><a href="#OpenVPN服务器1194端口映射到外网" class="headerlink" title="OpenVPN服务器1194端口映射到外网"></a>OpenVPN服务器1194端口映射到外网</h2><p>登录到路由器10.84.102.1进行外网映射配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">******************************************************************************</span><br><span class="line">* Copyright (c) 2004-2015 Hangzhou H3C Tech. Co., Ltd. All rights reserved.  *</span><br><span class="line">* Without the owner&#x27;s prior written consent,                                 *</span><br><span class="line">* no decompiling or reverse-engineering shall be allowed.                    *</span><br><span class="line">******************************************************************************</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Login authentication</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Username:admin</span><br><span class="line">Password:</span><br><span class="line">&lt;GPluslife&gt;sys</span><br><span class="line">System View: return to User View with Ctrl+Z.</span><br><span class="line"># 进入外网网卡</span><br><span class="line">[GPluslife]in gig0/0</span><br><span class="line">[GPluslife-Ethernet0/0] nat server 15 protocol udp global current-interface 1194 inside 10.84.102.131 1194</span><br><span class="line">[GPluslife-Ethernet0/0] save</span><br><span class="line">[GPluslife-Ethernet0/0] quit</span><br><span class="line"># 查看更改后的配置是否成功</span><br><span class="line">[GPluslife]dis cur</span><br><span class="line">[GPluslife]quit</span><br></pre></td></tr></table></figure><p>映射完成后可找台外网服务器通过nmap扫描下1194端口是否开放</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-net-work:~# nmap -sU [路由器外网IP] -p 1194 -Pn</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2022-08-04 11:36 CST</span><br><span class="line">Nmap scan report for xx.xx.xx.xx</span><br><span class="line">Host is up.</span><br><span class="line"></span><br><span class="line">PORT     STATE         SERVICE</span><br><span class="line">1194/udp open|filtered openvpn</span><br></pre></td></tr></table></figure><p>经过以上步骤，可通过client1.ovpn加载到Tunnelblick进行连接了。</p><p><code>注意：client1.ovpn配置中的remote后的ip为路由器的外网IP</code></p><h2 id="内网服务器能访问到OpenVPN的子网内"><a href="#内网服务器能访问到OpenVPN的子网内" class="headerlink" title="内网服务器能访问到OpenVPN的子网内"></a>内网服务器能访问到OpenVPN的子网内</h2><p>登录到路由器10.84.102.1进行子网路由配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">******************************************************************************</span><br><span class="line">* Copyright (c) 2004-2015 Hangzhou H3C Tech. Co., Ltd. All rights reserved.  *</span><br><span class="line">* Without the owner&#x27;s prior written consent,                                 *</span><br><span class="line">* no decompiling or reverse-engineering shall be allowed.                    *</span><br><span class="line">******************************************************************************</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Login authentication</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Username:admin</span><br><span class="line">Password:</span><br><span class="line">&lt;GPluslife&gt;sys</span><br><span class="line">System View: return to User View with Ctrl+Z.</span><br><span class="line"># 查看现有配置</span><br><span class="line">[GPluslife]dis cur</span><br><span class="line">[GPluslife] ip route-static 10.8.0.0 255.255.255.0 10.84.102.131</span><br><span class="line"># 查看添加路由后的配置</span><br><span class="line">[GPluslife]dis cur</span><br><span class="line">[GPluslife] save</span><br><span class="line">[GPluslife] quit</span><br></pre></td></tr></table></figure><p>经过以上步骤，可通过内网服务器（10.84.102.90）ping客户机分配的（10.8.0.x）是否可以连通</p><h2 id="客户机信息查看-以macOS为例"><a href="#客户机信息查看-以macOS为例" class="headerlink" title="客户机信息查看,以macOS为例"></a>客户机信息查看,以macOS为例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看客户机的vpn所分配的内网IP地址</span><br><span class="line">wujianjun@work-mbp blog % ifconfig</span><br><span class="line"># 查看客户机路由表</span><br><span class="line">wujianjun@work-mbp blog % netstat -nr</span><br></pre></td></tr></table></figure><h2 id="常见问题-以macOS为例"><a href="#常见问题-以macOS为例" class="headerlink" title="常见问题, 以macOS为例"></a>常见问题, 以macOS为例</h2><ol><li><p>Tunnelblick出现<code>write UDP: Can&#39;t assign requested address (code=49)</code>错误<br>解决方案：由于客户机路由表影响，通过在终端<code>sudo route flush</code>来解决</p></li><li><p>测试期间可以尝试通过以下方法来在客户机上加路由<br>解决方案：<br>#添加基于接口的路由<br>sudo route add -host 1.1.1.1 -iface lo0<br>sudo route add -net 1.1.1.0/24 -iface lo0<br>#添加基于网关IP的路由<br>sudo route add -net 1.1.1.0/24 192.168.1.1<br>sudo route add -host 1.1.1.1 192.168.1.1<br>#删除静态路由<br>sudo route delete 1.1.1.0/24<br>sudo route delete 1.1.1.1</p></li></ol><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;按&lt;img src=&quot;/2022/08/04/openvpn-install&quot; alt=&quot;OpenVPN系列一之安装配置&quot;&gt;配置好之后，需要</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="OpenVPN" scheme="http://www.uto.ink/tags/OpenVPN/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN系列一之安装配置</title>
    <link href="http://www.uto.ink/2022/08/04/openvpn-install/"/>
    <id>http://www.uto.ink/2022/08/04/openvpn-install/</id>
    <published>2022-08-04T03:54:10.000Z</published>
    <updated>2024-02-28T06:35:25.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近成都疫情严重，为了研发工作顺序不中断推进，方便研发人员在家也能debug程序，需要外网到内网访问通道。</p><p>最初在H3C路由器上搭建L2TP VPN通道，经测试发现macOS11能正常联通和使用，在macOS12下则能ping通但不能访问内网服务器的任何其它端口，在网络上遇到这个问题的人还不少，都没有提出有效的解决方法。</p><p>经过不断的尝试最终决定在内网服务器上通过vpn软件来构建vpn访问通道。</p><h2 id="服务器环境参数"><a href="#服务器环境参数" class="headerlink" title="服务器环境参数"></a>服务器环境参数</h2><table><thead><tr><th>序号</th><th>设备名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>路由器</td><td>10.84.102.1</td><td>H3C专线路由器</td></tr><tr><td>2</td><td>Vpn服务器</td><td>10.84.102.131</td><td>搭建20.04 LTS操作系统</td></tr><tr><td>3</td><td>服务器1</td><td>10.84.102.90</td><td>内网服务器</td></tr></tbody></table><p>所涉及到的软件为：<br>OpenVPN 2.4.7（服务端）<br>Tunnelblick 3.8.7a（客户机软件）</p><h2 id="搭建VpnServer"><a href="#搭建VpnServer" class="headerlink" title="搭建VpnServer"></a>搭建VpnServer</h2><p>以下操作均在10.84.102.131上进行</p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# sudo apt update</span><br><span class="line">root@wujianjun-work:~# sudo apt install openvpn easy-rsa</span><br><span class="line">root@wujianjun-work:~# openvpn --version</span><br><span class="line">OpenVPN 2.4.7 x86_64-pc-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] [PKCS11] [MH/PKTINFO] [AEAD] built on Mar 22 2022</span><br><span class="line">library versions: OpenSSL 1.1.1f  31 Mar 2020, LZO 2.10</span><br><span class="line">Originally developed by James Yonan</span><br><span class="line">Copyright (C) 2002-2018 OpenVPN Inc &lt;sales@openvpn.net&gt;</span><br></pre></td></tr></table></figure><h3 id="配置并启动VpnServer"><a href="#配置并启动VpnServer" class="headerlink" title="配置并启动VpnServer"></a>配置并启动VpnServer</h3><ol><li><p>OpenVPN使用TLS/SSL协议保证传输安全，它使用证书对服务器与客户端之间的传输进行加密，所以这里需要我们自己创建一个简单的CA证书，easy-rsa可以帮助我们做到这一点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# mkdir ~/ca</span><br><span class="line">root@wujianjun-work:~# ln -s /usr/share/easy-rsa/* ~/ca/</span><br><span class="line">root@wujianjun-work:~# cd ~/ca</span><br><span class="line">root@wujianjun-work:~# sudo vi var</span><br><span class="line"></span><br><span class="line">打开var文件后，在其中添加以下两行，保存关闭：</span><br><span class="line">set_var EASYRSA_ALGO &quot;ec&quot;</span><br><span class="line">set_var EASYRSA_DIGEST &quot;sha512&quot;</span><br><span class="line"></span><br><span class="line">root@wujianjun-work:~# ./easyrsa init-pki</span><br><span class="line">root@wujianjun-work:~# ./easyrsa build-ca</span><br><span class="line">root@wujianjun-work:~# ./easyrsa gen-req server nopass</span><br><span class="line">root@wujianjun-work:~# sudo cp ~/ca/pki/private/server.key /etc/openvpn/server/</span><br><span class="line">root@wujianjun-work:~# ./easyrsa sign-req server server</span><br><span class="line">root@wujianjun-work:~# sudo cp ~/ca/pki/ca.crt /etc/openvpn/server/</span><br><span class="line">root@wujianjun-work:~# sudo cp ~/ca/pki/issued/server.crt /etc/openvpn/server/</span><br><span class="line"># 为了应对端口扫描等恶意举动，这里需要添加额外的安全措施</span><br><span class="line">root@wujianjun-work:~# openvpn --genkey --secret ta.key</span><br><span class="line">root@wujianjun-work:~# sudo cp ta.key /etc/openvpn/server/</span><br></pre></td></tr></table></figure></li><li><p>配置服务端的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# sudo vi /etc/openvpn/server/server.conf</span><br></pre></td></tr></table></figure><p>把以下内容拷贝进去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br></pre></td><td class="code"><pre><span class="line">#################################################</span><br><span class="line"># Sample OpenVPN 2.0 config file for            #</span><br><span class="line"># multi-client server.                          #</span><br><span class="line">#                                               #</span><br><span class="line"># This file is for the server side              #</span><br><span class="line"># of a many-clients &lt;-&gt; one-server              #</span><br><span class="line"># OpenVPN configuration.                        #</span><br><span class="line">#                                               #</span><br><span class="line"># OpenVPN also supports                         #</span><br><span class="line"># single-machine &lt;-&gt; single-machine             #</span><br><span class="line"># configurations (See the Examples page         #</span><br><span class="line"># on the web site for more info).               #</span><br><span class="line">#                                               #</span><br><span class="line"># This config should work on Windows            #</span><br><span class="line"># or Linux/BSD systems.  Remember on            #</span><br><span class="line"># Windows to quote pathnames and use            #</span><br><span class="line"># double backslashes, e.g.:                     #</span><br><span class="line"># &quot;C:\\Program Files\\OpenVPN\\config\\foo.key&quot; #</span><br><span class="line">#                                               #</span><br><span class="line"># Comments are preceded with &#x27;#&#x27; or &#x27;;&#x27;         #</span><br><span class="line">#################################################</span><br><span class="line"></span><br><span class="line"># Which local IP address should OpenVPN</span><br><span class="line"># listen on? (optional)</span><br><span class="line"># 如果存在多网卡，由需要绑定具体ip地址</span><br><span class="line">;local a.b.c.d</span><br><span class="line"></span><br><span class="line"># Which TCP/UDP port should OpenVPN listen on?</span><br><span class="line"># If you want to run multiple OpenVPN instances</span><br><span class="line"># on the same machine, use a different port</span><br><span class="line"># number for each one.  You will need to</span><br><span class="line"># open up this port on your firewall.</span><br><span class="line"># vpn服务的监听端口</span><br><span class="line">port 1194</span><br><span class="line">;port 1701</span><br><span class="line"></span><br><span class="line"># TCP or UDP server?</span><br><span class="line">;proto tcp</span><br><span class="line">proto udp</span><br><span class="line"></span><br><span class="line"># &quot;dev tun&quot; will create a routed IP tunnel,</span><br><span class="line"># &quot;dev tap&quot; will create an ethernet tunnel.</span><br><span class="line"># Use &quot;dev tap0&quot; if you are ethernet bridging</span><br><span class="line"># and have precreated a tap0 virtual interface</span><br><span class="line"># and bridged it with your ethernet interface.</span><br><span class="line"># If you want to control access policies</span><br><span class="line"># over the VPN, you must create firewall</span><br><span class="line"># rules for the the TUN/TAP interface.</span><br><span class="line"># On non-Windows systems, you can give</span><br><span class="line"># an explicit unit number, such as tun0.</span><br><span class="line"># On Windows, use &quot;dev-node&quot; for this.</span><br><span class="line"># On most systems, the VPN will not function</span><br><span class="line"># unless you partially or fully disable</span><br><span class="line"># the firewall for the TUN/TAP interface.</span><br><span class="line">;dev tap</span><br><span class="line">dev tun</span><br><span class="line"></span><br><span class="line"># Windows needs the TAP-Win32 adapter name</span><br><span class="line"># from the Network Connections panel if you</span><br><span class="line"># have more than one.  On XP SP2 or higher,</span><br><span class="line"># you may need to selectively disable the</span><br><span class="line"># Windows firewall for the TAP adapter.</span><br><span class="line"># Non-Windows systems usually don&#x27;t need this.</span><br><span class="line">;dev-node MyTap</span><br><span class="line"></span><br><span class="line"># SSL/TLS root certificate (ca), certificate</span><br><span class="line"># (cert), and private key (key).  Each client</span><br><span class="line"># and the server must have their own cert and</span><br><span class="line"># key file.  The server and all clients will</span><br><span class="line"># use the same ca file.</span><br><span class="line">#</span><br><span class="line"># See the &quot;easy-rsa&quot; directory for a series</span><br><span class="line"># of scripts for generating RSA certificates</span><br><span class="line"># and private keys.  Remember to use</span><br><span class="line"># a unique Common Name for the server</span><br><span class="line"># and each of the client certificates.</span><br><span class="line">#</span><br><span class="line"># Any X509 key management system can be used.</span><br><span class="line"># OpenVPN can also use a PKCS #12 formatted key file</span><br><span class="line"># (see &quot;pkcs12&quot; directive in man page).</span><br><span class="line">ca ca.crt</span><br><span class="line">cert server.crt</span><br><span class="line">key server.key  # This file should be kept secret</span><br><span class="line"></span><br><span class="line"># Diffie hellman parameters.</span><br><span class="line"># Generate your own with:</span><br><span class="line">#   openssl dhparam -out dh2048.pem 2048</span><br><span class="line">;dh dh2048.pem</span><br><span class="line">dh none</span><br><span class="line"></span><br><span class="line"># Network topology</span><br><span class="line"># Should be subnet (addressing via IP)</span><br><span class="line"># unless Windows clients v2.0.9 and lower have to</span><br><span class="line"># be supported (then net30, i.e. a /30 per client)</span><br><span class="line"># Defaults to net30 (not recommended)</span><br><span class="line">;topology subnet</span><br><span class="line"></span><br><span class="line"># Configure server mode and supply a VPN subnet</span><br><span class="line"># for OpenVPN to draw client addresses from.</span><br><span class="line"># The server will take 10.8.0.1 for itself,</span><br><span class="line"># the rest will be made available to clients.</span><br><span class="line"># Each client will be able to reach the server</span><br><span class="line"># on 10.8.0.1. Comment this line out if you are</span><br><span class="line"># ethernet bridging. See the man page for more info.</span><br><span class="line"># 给客户端分配的ip段，当前配置为10.8.0.X</span><br><span class="line">server 10.8.0.0 255.255.255.0</span><br><span class="line"></span><br><span class="line"># Maintain a record of client &lt;-&gt; virtual IP address</span><br><span class="line"># associations in this file.  If OpenVPN goes down or</span><br><span class="line"># is restarted, reconnecting clients can be assigned</span><br><span class="line"># the same virtual IP address from the pool that was</span><br><span class="line"># previously assigned.</span><br><span class="line">ifconfig-pool-persist /var/log/openvpn/ipp.txt</span><br><span class="line"></span><br><span class="line"># Configure server mode for ethernet bridging.</span><br><span class="line"># You must first use your OS&#x27;s bridging capability</span><br><span class="line"># to bridge the TAP interface with the ethernet</span><br><span class="line"># NIC interface.  Then you must manually set the</span><br><span class="line"># IP/netmask on the bridge interface, here we</span><br><span class="line"># assume 10.8.0.4/255.255.255.0.  Finally we</span><br><span class="line"># must set aside an IP range in this subnet</span><br><span class="line"># (start=10.8.0.50 end=10.8.0.100) to allocate</span><br><span class="line"># to connecting clients.  Leave this line commented</span><br><span class="line"># out unless you are ethernet bridging.</span><br><span class="line">;server-bridge 10.8.0.4 255.255.255.0 10.8.0.50 10.8.0.100</span><br><span class="line"></span><br><span class="line"># Configure server mode for ethernet bridging</span><br><span class="line"># using a DHCP-proxy, where clients talk</span><br><span class="line"># to the OpenVPN server-side DHCP server</span><br><span class="line"># to receive their IP address allocation</span><br><span class="line"># and DNS server addresses.  You must first use</span><br><span class="line"># your OS&#x27;s bridging capability to bridge the TAP</span><br><span class="line"># interface with the ethernet NIC interface.</span><br><span class="line"># Note: this mode only works on clients (such as</span><br><span class="line"># Windows), where the client-side TAP adapter is</span><br><span class="line"># bound to a DHCP client.</span><br><span class="line">;server-bridge</span><br><span class="line"></span><br><span class="line"># Push routes to the client to allow it</span><br><span class="line"># to reach other private subnets behind</span><br><span class="line"># the server.  Remember that these</span><br><span class="line"># private subnets will also need</span><br><span class="line"># to know to route the OpenVPN client</span><br><span class="line"># address pool (10.8.0.0/255.255.255.0)</span><br><span class="line"># back to the OpenVPN server.</span><br><span class="line"># 设置客户端连接上vpn后，访问不同网断所走网络。客户端软件连接上后会自动在客户机上创建网络路由</span><br><span class="line">;push &quot;route-gateway 10.8.0.1&quot;</span><br><span class="line">push &quot;route-nopull&quot;</span><br><span class="line"># 以上配置表示客户端连接上后不额外加入任何路由</span><br><span class="line">push &quot;route 10.84.102.0 255.255.255.0 vpn_gateway&quot;</span><br><span class="line"># 以上配置表示客户端连接上后，访问10.84.102.X的服务器走vpn网关，下条同含义</span><br><span class="line"># vpn_gateway：表示vpn网关；net_gateway：表示走本机网络网关</span><br><span class="line">push &quot;route 10.8.0.0 255.255.255.0 vpn_gateway&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># To assign specific IP addresses to specific</span><br><span class="line"># clients or if a connecting client has a private</span><br><span class="line"># subnet behind it that should also have VPN access,</span><br><span class="line"># use the subdirectory &quot;ccd&quot; for client-specific</span><br><span class="line"># configuration files (see man page for more info).</span><br><span class="line"></span><br><span class="line"># EXAMPLE: Suppose the client</span><br><span class="line"># having the certificate common name &quot;Thelonious&quot;</span><br><span class="line"># also has a small subnet behind his connecting</span><br><span class="line"># machine, such as 192.168.40.128/255.255.255.248.</span><br><span class="line"># First, uncomment out these lines:</span><br><span class="line">;client-config-dir ccd</span><br><span class="line">;route 10.84.0.0 255.255.255.0</span><br><span class="line"># Then create a file ccd/Thelonious with this line:</span><br><span class="line">#   iroute 192.168.40.128 255.255.255.248</span><br><span class="line"># This will allow Thelonious&#x27; private subnet to</span><br><span class="line"># access the VPN.  This example will only work</span><br><span class="line"># if you are routing, not bridging, i.e. you are</span><br><span class="line"># using &quot;dev tun&quot; and &quot;server&quot; directives.</span><br><span class="line"></span><br><span class="line"># EXAMPLE: Suppose you want to give</span><br><span class="line"># Thelonious a fixed VPN IP address of 10.9.0.1.</span><br><span class="line"># First uncomment out these lines:</span><br><span class="line">;client-config-dir ccd</span><br><span class="line">;route 10.9.0.0 255.255.255.252</span><br><span class="line"># Then add this line to ccd/Thelonious:</span><br><span class="line">#   ifconfig-push 10.9.0.1 10.9.0.2</span><br><span class="line"></span><br><span class="line"># Suppose that you want to enable different</span><br><span class="line"># firewall access policies for different groups</span><br><span class="line"># of clients.  There are two methods:</span><br><span class="line"># (1) Run multiple OpenVPN daemons, one for each</span><br><span class="line">#     group, and firewall the TUN/TAP interface</span><br><span class="line">#     for each group/daemon appropriately.</span><br><span class="line"># (2) (Advanced) Create a script to dynamically</span><br><span class="line">#     modify the firewall in response to access</span><br><span class="line">#     from different clients.  See man</span><br><span class="line">#     page for more info on learn-address script.</span><br><span class="line">;learn-address ./script</span><br><span class="line"></span><br><span class="line"># If enabled, this directive will configure</span><br><span class="line"># all clients to redirect their default</span><br><span class="line"># network gateway through the VPN, causing</span><br><span class="line"># all IP traffic such as web browsing and</span><br><span class="line"># and DNS lookups to go through the VPN</span><br><span class="line"># (The OpenVPN server machine may need to NAT</span><br><span class="line"># or bridge the TUN/TAP interface to the internet</span><br><span class="line"># in order for this to work properly).</span><br><span class="line"># 打开下行注释（去掉；号）表示强制代理所有流量</span><br><span class="line">;push &quot;redirect-gateway def1 bypass-dhcp&quot;</span><br><span class="line"></span><br><span class="line"># Certain Windows-specific network settings</span><br><span class="line"># can be pushed to clients, such as DNS</span><br><span class="line"># or WINS server addresses.  CAVEAT:</span><br><span class="line"># http://openvpn.net/faq.html#dhcpcaveats</span><br><span class="line"># The addresses below refer to the public</span><br><span class="line"># DNS servers provided by opendns.com.</span><br><span class="line"># 设置客户端连接上之后push DNS地址到客户端</span><br><span class="line">push &quot;dhcp-option DNS 61.139.2.69&quot;</span><br><span class="line">push &quot;dhcp-option DNS 208.67.220.220&quot;</span><br><span class="line"></span><br><span class="line"># Uncomment this directive to allow different</span><br><span class="line"># clients to be able to &quot;see&quot; each other.</span><br><span class="line"># By default, clients will only see the server.</span><br><span class="line"># To force clients to only see the server, you</span><br><span class="line"># will also need to appropriately firewall the</span><br><span class="line"># server&#x27;s TUN/TAP interface.</span><br><span class="line"># 多台客户机连接上同一个vpn后是否网络互通，如果不互通则注释掉以下配置。</span><br><span class="line">client-to-client</span><br><span class="line"></span><br><span class="line"># Uncomment this directive if multiple clients</span><br><span class="line"># might connect with the same certificate/key</span><br><span class="line"># files or common names.  This is recommended</span><br><span class="line"># only for testing purposes.  For production use,</span><br><span class="line"># each client should have its own certificate/key</span><br><span class="line"># pair.</span><br><span class="line">#</span><br><span class="line"># IF YOU HAVE NOT GENERATED INDIVIDUAL</span><br><span class="line"># CERTIFICATE/KEY PAIRS FOR EACH CLIENT,</span><br><span class="line"># EACH HAVING ITS OWN UNIQUE &quot;COMMON NAME&quot;,</span><br><span class="line"># UNCOMMENT THIS LINE OUT.</span><br><span class="line">;duplicate-cn</span><br><span class="line"></span><br><span class="line"># The keepalive directive causes ping-like</span><br><span class="line"># messages to be sent back and forth over</span><br><span class="line"># the link so that each side knows when</span><br><span class="line"># the other side has gone down.</span><br><span class="line"># Ping every 10 seconds, assume that remote</span><br><span class="line"># peer is down if no ping received during</span><br><span class="line"># a 120 second time period.</span><br><span class="line">keepalive 10 120</span><br><span class="line"></span><br><span class="line"># For extra security beyond that provided</span><br><span class="line"># by SSL/TLS, create an &quot;HMAC firewall&quot;</span><br><span class="line"># to help block DoS attacks and UDP port flooding.</span><br><span class="line">#</span><br><span class="line"># Generate with:</span><br><span class="line">#   openvpn --genkey --secret ta.key</span><br><span class="line">#</span><br><span class="line"># The server and each client must have</span><br><span class="line"># a copy of this key.</span><br><span class="line"># The second parameter should be &#x27;0&#x27;</span><br><span class="line"># on the server and &#x27;1&#x27; on the clients.</span><br><span class="line">;tls-auth ta.key 0 # This file is secret</span><br><span class="line">tls-crypt ta.key</span><br><span class="line"></span><br><span class="line"># Select a cryptographic cipher.</span><br><span class="line"># This config item must be copied to</span><br><span class="line"># the client config file as well.</span><br><span class="line"># Note that v2.4 client/server will automatically</span><br><span class="line"># negotiate AES-256-GCM in TLS mode.</span><br><span class="line"># See also the ncp-cipher option in the manpage</span><br><span class="line">;cipher AES-256-CBC</span><br><span class="line">cipher AES-256-GCM</span><br><span class="line">auth SHA256</span><br><span class="line"></span><br><span class="line"># Enable compression on the VPN link and push the</span><br><span class="line"># option to the client (v2.4+ only, for earlier</span><br><span class="line"># versions see below)</span><br><span class="line">;compress lz4-v2</span><br><span class="line">;push &quot;compress lz4-v2&quot;</span><br><span class="line"></span><br><span class="line"># For compression compatible with older clients use comp-lzo</span><br><span class="line"># If you enable it here, you must also</span><br><span class="line"># enable it in the client config file.</span><br><span class="line">;comp-lzo</span><br><span class="line"></span><br><span class="line"># The maximum number of concurrently connected</span><br><span class="line"># clients we want to allow.</span><br><span class="line">;max-clients 100</span><br><span class="line"></span><br><span class="line"># It&#x27;s a good idea to reduce the OpenVPN</span><br><span class="line"># daemon&#x27;s privileges after initialization.</span><br><span class="line">#</span><br><span class="line"># You can uncomment this out on</span><br><span class="line"># non-Windows systems.</span><br><span class="line">user nobody</span><br><span class="line">group nogroup</span><br><span class="line"></span><br><span class="line"># The persist options will try to avoid</span><br><span class="line"># accessing certain resources on restart</span><br><span class="line"># that may no longer be accessible because</span><br><span class="line"># of the privilege downgrade.</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line"></span><br><span class="line"># Output a short status file showing</span><br><span class="line"># current connections, truncated</span><br><span class="line"># and rewritten every minute.</span><br><span class="line">status /var/log/openvpn/openvpn-status.log</span><br><span class="line"></span><br><span class="line"># By default, log messages will go to the syslog (or</span><br><span class="line"># on Windows, if running as a service, they will go to</span><br><span class="line"># the &quot;\Program Files\OpenVPN\log&quot; directory).</span><br><span class="line"># Use log or log-append to override this default.</span><br><span class="line"># &quot;log&quot; will truncate the log file on OpenVPN startup,</span><br><span class="line"># while &quot;log-append&quot; will append to it.  Use one</span><br><span class="line"># or the other (but not both).</span><br><span class="line">;log         /var/log/openvpn/openvpn.log</span><br><span class="line">;log-append  /var/log/openvpn/openvpn.log</span><br><span class="line"></span><br><span class="line"># Set the appropriate level of log</span><br><span class="line"># file verbosity.</span><br><span class="line">#</span><br><span class="line"># 0 is silent, except for fatal errors</span><br><span class="line"># 4 is reasonable for general usage</span><br><span class="line"># 5 and 6 can help to debug connection problems</span><br><span class="line"># 9 is extremely verbose</span><br><span class="line">verb 3</span><br><span class="line"></span><br><span class="line"># Silence repeating messages.  At most 20</span><br><span class="line"># sequential messages of the same message</span><br><span class="line"># category will be output to the log.</span><br><span class="line">;mute 20</span><br><span class="line"></span><br><span class="line"># Notify the client that when the server restarts so it</span><br><span class="line"># can automatically reconnect.</span><br><span class="line">explicit-exit-notify 1</span><br></pre></td></tr></table></figure></li><li><p>开启ipv4转发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">root@wujianjun-work:~# sudo sysctl -p</span><br></pre></td></tr></table></figure></li><li><p>启动服务器OpenVPN服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# sudo systemctl -f enable openvpn-server@server.service</span><br><span class="line">root@wujianjun-work:~# sudo systemctl start openvpn-server@server.service</span><br><span class="line"># 检查udp监听是否正常</span><br><span class="line">root@wujianjun-work:~# netstat -antup|grep 1194</span><br><span class="line">udp        0      0 0.0.0.0:1194            0.0.0.0:*  </span><br></pre></td></tr></table></figure></li></ol><h3 id="生成客户端ovpn配置文件"><a href="#生成客户端ovpn配置文件" class="headerlink" title="生成客户端ovpn配置文件"></a>生成客户端ovpn配置文件</h3><ol><li><p>生成客户端的密钥文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# mkdir -p ~/client_conf/keys/</span><br><span class="line">root@wujianjun-work:~# chmod -R 700 ~/client_conf/</span><br><span class="line">root@wujianjun-work:~# cd ~/ca</span><br><span class="line">root@wujianjun-work:~# ./easyrsa gen-req client1 nopass</span><br><span class="line">root@wujianjun-work:~# cp ~/ca/pki/private/client1.key ~/client_conf/keys/</span><br><span class="line">root@wujianjun-work:~# ./easyrsa sign-req client client1</span><br><span class="line">root@wujianjun-work:~# cp client1.crt ~/client_conf/keys/</span><br><span class="line">root@wujianjun-work:~# cp ~/ca/ta.key ~/client_conf/keys/</span><br><span class="line">root@wujianjun-work:~# sudo cp /etc/openvpn/server/ca.crt ~/client_conf/keys/</span><br></pre></td></tr></table></figure></li><li><p>配置并生成客户端的认证文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# mkdir -p ~/client_conf/files/</span><br><span class="line">root@wujianjun-work:~# vi ~/client_conf/base.conf</span><br></pre></td></tr></table></figure><p>把以下内容拷贝进去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">##############################################</span><br><span class="line"># Sample client-side OpenVPN 2.0 config file #</span><br><span class="line"># for connecting to multi-client server.     #</span><br><span class="line">#                                            #</span><br><span class="line"># This configuration can be used by multiple #</span><br><span class="line"># clients, however each client should have   #</span><br><span class="line"># its own cert and key files.                #</span><br><span class="line">#                                            #</span><br><span class="line"># On Windows, you might want to rename this  #</span><br><span class="line"># file so it has a .ovpn extension           #</span><br><span class="line">##############################################</span><br><span class="line"></span><br><span class="line"># Specify that we are a client and that we</span><br><span class="line"># will be pulling certain config file directives</span><br><span class="line"># from the server.</span><br><span class="line">client</span><br><span class="line"></span><br><span class="line"># Use the same setting as you are using on</span><br><span class="line"># the server.</span><br><span class="line"># On most systems, the VPN will not function</span><br><span class="line"># unless you partially or fully disable</span><br><span class="line"># the firewall for the TUN/TAP interface.</span><br><span class="line">dev tap</span><br><span class="line">;dev tun</span><br><span class="line"></span><br><span class="line"># Windows needs the TAP-Win32 adapter name</span><br><span class="line"># from the Network Connections panel</span><br><span class="line"># if you have more than one.  On XP SP2,</span><br><span class="line"># you may need to disable the firewall</span><br><span class="line"># for the TAP adapter.</span><br><span class="line">;dev-node MyTap</span><br><span class="line"></span><br><span class="line"># Are we connecting to a TCP or</span><br><span class="line"># UDP server?  Use the same setting as</span><br><span class="line"># on the server.</span><br><span class="line">;proto tcp</span><br><span class="line">proto udp</span><br><span class="line"></span><br><span class="line"># The hostname/IP and port of the server.</span><br><span class="line"># You can have multiple remote entries</span><br><span class="line"># to load balance between the servers.</span><br><span class="line"># remote server-ip 1194</span><br><span class="line">remote [Vpn服务器外网IP] 1194</span><br><span class="line">;remote my-server-2 1194</span><br><span class="line"></span><br><span class="line"># Choose a random host from the remote</span><br><span class="line"># list for load-balancing.  Otherwise</span><br><span class="line"># try hosts in the order specified.</span><br><span class="line">;remote-random</span><br><span class="line"></span><br><span class="line"># Keep trying indefinitely to resolve the</span><br><span class="line"># host name of the OpenVPN server.  Very useful</span><br><span class="line"># on machines which are not permanently connected</span><br><span class="line"># to the internet such as laptops.</span><br><span class="line">resolv-retry infinite</span><br><span class="line"></span><br><span class="line"># Most clients don&#x27;t need to bind to</span><br><span class="line"># a specific local port number.</span><br><span class="line">nobind</span><br><span class="line"></span><br><span class="line"># Downgrade privileges after initialization (non-Windows only)</span><br><span class="line">user nobody</span><br><span class="line">group nogroup</span><br><span class="line"></span><br><span class="line"># Try to preserve some state across restarts.</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line"></span><br><span class="line"># If you are connecting through an</span><br><span class="line"># HTTP proxy to reach the actual OpenVPN</span><br><span class="line"># server, put the proxy server/IP and</span><br><span class="line"># port number here.  See the man page</span><br><span class="line"># if your proxy server requires</span><br><span class="line"># authentication.</span><br><span class="line">;http-proxy-retry # retry on connection failures</span><br><span class="line">;http-proxy [proxy server] [proxy port #]</span><br><span class="line"></span><br><span class="line"># Wireless networks often produce a lot</span><br><span class="line"># of duplicate packets.  Set this flag</span><br><span class="line"># to silence duplicate packet warnings.</span><br><span class="line">;mute-replay-warnings</span><br><span class="line"></span><br><span class="line"># SSL/TLS parms.</span><br><span class="line"># See the server config file for more</span><br><span class="line"># description.  It&#x27;s best to use</span><br><span class="line"># a separate .crt/.key file pair</span><br><span class="line"># for each client.  A single ca</span><br><span class="line"># file can be used for all clients.</span><br><span class="line">;ca ca.crt</span><br><span class="line">;cert client.crt</span><br><span class="line">;key client.key</span><br><span class="line"></span><br><span class="line"># Verify server certificate by checking that the</span><br><span class="line"># certicate has the correct key usage set.</span><br><span class="line"># This is an important precaution to protect against</span><br><span class="line"># a potential attack discussed here:</span><br><span class="line">#  http://openvpn.net/howto.html#mitm</span><br><span class="line">#</span><br><span class="line"># To use this feature, you will need to generate</span><br><span class="line"># your server certificates with the keyUsage set to</span><br><span class="line">#   digitalSignature, keyEncipherment</span><br><span class="line"># and the extendedKeyUsage to</span><br><span class="line">#   serverAuth</span><br><span class="line"># EasyRSA can do this for you.</span><br><span class="line">remote-cert-tls server</span><br><span class="line"></span><br><span class="line"># If a tls-auth key is used on the server</span><br><span class="line"># then every client must also have the key.</span><br><span class="line">;tls-auth ta.key 1</span><br><span class="line"></span><br><span class="line"># Select a cryptographic cipher.</span><br><span class="line"># If the cipher option is used on the server</span><br><span class="line"># then you must also specify it here.</span><br><span class="line"># Note that v2.4 client/server will automatically</span><br><span class="line"># negotiate AES-256-GCM in TLS mode.</span><br><span class="line"># See also the ncp-cipher option in the manpage</span><br><span class="line">;cipher AES-256-CBC</span><br><span class="line">cipher AES-256-GCM</span><br><span class="line">auth SHA256</span><br><span class="line"></span><br><span class="line"># Enable compression on the VPN link.</span><br><span class="line"># Don&#x27;t enable this unless it is also</span><br><span class="line"># enabled in the server config file.</span><br><span class="line">#comp-lzo</span><br><span class="line"></span><br><span class="line"># Set log file verbosity.</span><br><span class="line">verb 3</span><br><span class="line"></span><br><span class="line"># Silence repeating messages</span><br><span class="line">;mute 20</span><br><span class="line">key-direction 1</span><br></pre></td></tr></table></figure></li><li><p>创建一个脚本文件用来生成客户端配置文件并对其提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# vi ~/client_conf/make_config.sh</span><br></pre></td></tr></table></figure><p>把以下内容拷贝进去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># First argument: Client identifier</span><br><span class="line"></span><br><span class="line">KEY_DIR=~/client_conf/keys</span><br><span class="line">OUTPUT_DIR=~/client_conf/files</span><br><span class="line">BASE_CONFIG=~/client_conf/base.conf</span><br><span class="line"></span><br><span class="line">cat $&#123;BASE_CONFIG&#125; \</span><br><span class="line">    &lt;(echo -e &#x27;&lt;ca&gt;&#x27;) \</span><br><span class="line">    $&#123;KEY_DIR&#125;/ca.crt \</span><br><span class="line">    &lt;(echo -e &#x27;&lt;/ca&gt;\n&lt;cert&gt;&#x27;) \</span><br><span class="line">    $&#123;KEY_DIR&#125;/$&#123;1&#125;.crt \</span><br><span class="line">    &lt;(echo -e &#x27;&lt;/cert&gt;\n&lt;key&gt;&#x27;) \</span><br><span class="line">    $&#123;KEY_DIR&#125;/$&#123;1&#125;.key \</span><br><span class="line">    &lt;(echo -e &#x27;&lt;/key&gt;\n&lt;tls-crypt&gt;&#x27;) \</span><br><span class="line">    $&#123;KEY_DIR&#125;/ta.key \</span><br><span class="line">    &lt;(echo -e &#x27;&lt;/tls-crypt&gt;&#x27;) \</span><br><span class="line">    &gt; $&#123;OUTPUT_DIR&#125;/$&#123;1&#125;.ovpn</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@wujianjun-work:~# chmod 700 ~/client_conf/make_config.sh</span><br><span class="line">root@wujianjun-work:~# cd ~/client_conf</span><br><span class="line">root@wujianjun-work:~# ./make_config.sh client1</span><br><span class="line">root@wujianjun-work:~# ls -l ~/client_conf/files</span><br><span class="line">-rw-r--r-- 1 root root 11859 Aug  3 19:29 client1.ovpn</span><br></pre></td></tr></table></figure></li></ol><p>至此，我们获得了客户端的配置文件client1.ovpn</p><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近成都疫情严重，为了研发工作顺序不中断推进，方便研发人员在家也能debug程序，需要外网到内网访问通道。&lt;/p&gt;
&lt;p&gt;最初在H3C路由器</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="OpenVPN" scheme="http://www.uto.ink/tags/OpenVPN/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu Server安装后续配置</title>
    <link href="http://www.uto.ink/2022/05/17/ubuntu-server-config/"/>
    <id>http://www.uto.ink/2022/05/17/ubuntu-server-config/</id>
    <published>2022-05-17T08:04:41.000Z</published>
    <updated>2024-02-28T06:35:25.252Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、开启远程root"><a href="#一、开启远程root" class="headerlink" title="一、开启远程root"></a>一、开启远程root</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>ubuntu server默认不会开启root账号</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo passwd root</span><br><span class="line">wujianjun@wujianjun-work:~$ su - root</span><br><span class="line">wujianjun@wujianjun-work:~# vi /etc/ssh/sshd_config</span><br><span class="line">在文件中添加配置：PermitRootLogin yes</span><br><span class="line">wujianjun@wujianjun-work:~# /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><h2 id="二、固定IP配置"><a href="#二、固定IP配置" class="headerlink" title="二、固定IP配置"></a>二、固定IP配置</h2><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><p>Ubuntu 从 17.01 开始之后的版本，都已放弃在/etc/network/interfaces 里固定IP的配置，而是改成 netplan 方式，配置文件在：<code>/etc/netplan/</code>目录下</p><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><ol><li>切换到root账号，先通过ifconfig查看到网卡名</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~# ifconfig</span><br><span class="line">enp2s0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.84.102.130  netmask 255.255.255.0  broadcast 10.84.102.255</span><br><span class="line">        inet6 fe80::fe34:97ff:fe67:1359  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether fc:34:97:67:13:59  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 18835846  bytes 14116403620 (14.1 GB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 19693736  bytes 9492990687 (9.4 GB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 130834632  bytes 43706613473 (43.7 GB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 130834632  bytes 43706613473 (43.7 GB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><ol start="2"><li>配置网卡enp2s0网卡固定IP</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~# vi /etc/netplan/00-installer-config.yaml</span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    enp2s0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      addresses: [10.84.102.130/24]</span><br><span class="line">      gateway4: 10.84.102.1</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [10.84.102.1, 61.139.2.69]</span><br><span class="line">  version: 2</span><br></pre></td></tr></table></figure><ol start="3"><li>配置生效</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~# sudo netplan apply</span><br></pre></td></tr></table></figure><h2 id="三、免重装增加swap空间"><a href="#三、免重装增加swap空间" class="headerlink" title="三、免重装增加swap空间"></a>三、免重装增加swap空间</h2><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><p>有时由于硬件自身内存不足，我们可能会使用到linux的swap来顶，swap大小按经验一般需要设置成硬件内存的2倍。</p><h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><ol><li><p>切换到root</p></li><li><p>创建swap文件</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~# mkdir /swap</span><br><span class="line">wujianjun@wujianjun-work:~# cd /swap</span><br><span class="line">wujianjun@wujianjun-work:~# sudo dd if=/dev/zero of=swapfile bs=32M count=1k</span><br><span class="line">建立swapfile，大小为bs*count = 32M * 1k = 32G</span><br><span class="line">wujianjun@wujianjun-work:~# sudo mkswap -f swapfile</span><br><span class="line">将生成的文件转换为Swap文件</span><br></pre></td></tr></table></figure><ol start="3"><li>立即激活swap文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~# sudo swapon swapfile</span><br><span class="line">wujianjun@wujianjun-work:~# free -m</span><br><span class="line">total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          15842       12194         208         149        3439        3158</span><br><span class="line">Swap:         34815        2889       31926</span><br></pre></td></tr></table></figure><p>如果需要禁用swap文件则使用<code>sudo swapoff swapfile</code></p><ol start="4"><li>永久激活swap文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~# sudo vi /etc/fstab</span><br><span class="line">增加配置</span><br><span class="line">/swap/swapfile /swap swap defaults 0 0</span><br></pre></td></tr></table></figure><h2 id="四、调整swap启用时间"><a href="#四、调整swap启用时间" class="headerlink" title="四、调整swap启用时间"></a>四、调整swap启用时间</h2><h3 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h3><p>ubuntu 和 centos 一般默认都是 60 ，就是当内存使用=(100%-60%)*内存总量时则会使用swap缓存，如需调整尽量使用物理内存，由需要调整swappiness参数值</p><h3 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~# cat /proc/sys/vm/swappiness</span><br><span class="line">默认值 60</span><br><span class="line">wujianjun@wujianjun-work:~# sysctl vm.swappiness=10 # 临时调整</span><br><span class="line">wujianjun@wujianjun-work:~# echo &quot;vm.swappiness=10&quot; &gt;&gt; /etc/sysctl.conf #永久调整</span><br><span class="line">wujianjun@wujianjun-work:~# sysctl -p</span><br><span class="line">vm.swappiness = 10</span><br></pre></td></tr></table></figure><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、开启远程root&quot;&gt;&lt;a href=&quot;#一、开启远程root&quot; class=&quot;headerlink&quot; title=&quot;一、开启远程root&quot;&gt;&lt;/a&gt;一、开启远程root&lt;/h2&gt;&lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>Clone开源项目到私有Git服务器</title>
    <link href="http://www.uto.ink/2021/10/12/clone-remote-to-private-repo/"/>
    <id>http://www.uto.ink/2021/10/12/clone-remote-to-private-repo/</id>
    <published>2021-10-12T11:10:18.000Z</published>
    <updated>2024-02-28T06:35:25.244Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><ol><li>在clone的工程下增加私有仓库地址：<code>git remote add PrivateRepo http://xxx/repo/myproj.git</code></li><li>从私有仓库checkout分支到本地: <code>git checkout PrivateRepo/master</code></li><li>从远端仓库分支合并代码到私有仓库分支： <code>git merge master --allow-unrelated-histories</code></li><li>push代码: <code>git push</code></li></ol><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在clone的工程下增加私有仓库地址：&lt;code&gt;git remote add PrivateRepo http://xxx/r</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下切换jdk版本</title>
    <link href="http://www.uto.ink/2021/10/12/ubuntu-switch-jdk/"/>
    <id>http://www.uto.ink/2021/10/12/ubuntu-switch-jdk/</id>
    <published>2021-10-12T10:57:13.000Z</published>
    <updated>2024-02-28T06:35:25.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装新版本jdk和切换"><a href="#安装新版本jdk和切换" class="headerlink" title="安装新版本jdk和切换"></a>安装新版本jdk和切换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_111/bin/java 300</span><br><span class="line">wujianjun@wujianjun-work:~$ update-alternatives --config java</span><br></pre></td></tr></table></figure><h2 id="在profile上修改JAVA-HOME的指向目录"><a href="#在profile上修改JAVA-HOME的指向目录" class="headerlink" title="在profile上修改JAVA_HOME的指向目录"></a>在profile上修改JAVA_HOME的指向目录</h2><p>profile文件在两处, <code>/etc/profile</code>和<code>~/.profile</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/jdk1.8.0_111</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装新版本jdk和切换&quot;&gt;&lt;a href=&quot;#安装新版本jdk和切换&quot; class=&quot;headerlink&quot; title=&quot;安装新版本jdk和切换&quot;&gt;&lt;/a&gt;安装新版本jdk和切换&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>Podman系列之通过Maven插件dockerfile-maven-plugin完成镜像打包</title>
    <link href="http://www.uto.ink/2021/09/28/podman-dockerfile-maven-plugin/"/>
    <id>http://www.uto.ink/2021/09/28/podman-dockerfile-maven-plugin/</id>
    <published>2021-09-28T10:35:30.000Z</published>
    <updated>2024-02-28T06:43:51.875Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pom中添加插件"><a href="#pom中添加插件" class="headerlink" title="pom中添加插件"></a>pom中添加插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;com.spotify&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;dockerfile-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.4.13&lt;/version&gt;</span><br><span class="line">    &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;</span><br><span class="line">            &lt;id&gt;default&lt;/id&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">                &lt;goal&gt;build&lt;/goal&gt;</span><br><span class="line">                &lt;goal&gt;push&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">    &lt;/executions&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;repository&gt;myrepo.gpluslife.com/$&#123;project.artifactId&#125;&lt;/repository&gt;</span><br><span class="line">        &lt;tag&gt;$&#123;project.version&#125;&lt;/tag&gt;</span><br><span class="line">        &lt;useMavenSettingsForAuth&gt;true&lt;/useMavenSettingsForAuth&gt;</span><br><span class="line">        &lt;buildArgs&gt;</span><br><span class="line">            &lt;MODULE_FILE_NAME&gt;$&#123;project.build.finalName&#125;&lt;/MODULE_FILE_NAME&gt;</span><br><span class="line">        &lt;/buildArgs&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure><h2 id="打包镜像"><a href="#打包镜像" class="headerlink" title="打包镜像"></a>打包镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ clean package -U  -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>通过在Dockerfile文件所在目录执行以上命令成功后，则会自动在远程podman服务端创建镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman images</span><br><span class="line">REPOSITORY                                     TAG                         IMAGE ID      CREATED         SIZE</span><br><span class="line">myrepo.gpluslife.com/service-gateway-biz       1.0.0-SNAPSHOT              aa26ce31b312  20 seconds ago  294 MB</span><br><span class="line">docker.io/library/nginx                        1.20.1                      3456bc6a1c48  3 weeks ago     137 MB</span><br><span class="line">docker.io/adoptopenjdk/openjdk8                x86_64-ubuntu-jre8u292-b10  48b3b187af57  5 weeks ago     229 MB</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li>mvn package时抛错</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[INFO] I/O exception (java.io.IOException) caught when processing request to &#123;&#125;-&gt;unix://localhost:80: No such file or directory</span><br><span class="line">[INFO] Retrying request to &#123;&#125;-&gt;unix://localhost:80</span><br><span class="line">[INFO] I/O exception (java.io.IOException) caught when processing request to &#123;&#125;-&gt;unix://localhost:80: No such file or directory</span><br><span class="line">[INFO] Retrying request to &#123;&#125;-&gt;unix://localhost:80</span><br><span class="line">[INFO] I/O exception (java.io.IOException) caught when processing request to &#123;&#125;-&gt;unix://localhost:80: No such file or directory</span><br><span class="line">[INFO] Retrying request to &#123;&#125;-&gt;unix://localhost:80</span><br></pre></td></tr></table></figure><p>根因分析：由于未正确配置DOCKER_HOST环境变量导致走了本机默认的连接地址<br>解决方案：在环境变量上配置以下地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_HOST=&quot;tcp://host:2375&quot;</span><br></pre></td></tr></table></figure><p><code>注意：</code>macOS添加环境变量时不同于其他unix或类unix系统（默认使用bash，因此在.bash_profile中设置环境变量）；macOS的terminal默认使用的是zsh，在.zshrc中进行配置。</p><p>附插件官网地址： <a href="https://github.com/spotify/dockerfile-maven">https://github.com/spotify/dockerfile-maven</a></p><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;pom中添加插件&quot;&gt;&lt;a href=&quot;#pom中添加插件&quot; class=&quot;headerlink&quot; title=&quot;pom中添加插件&quot;&gt;&lt;/a&gt;pom中添加插件&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="podman" scheme="http://www.uto.ink/tags/podman/"/>
    
  </entry>
  
  <entry>
    <title>Podman系列之通过docker插件完成研发机镜像创建和运行</title>
    <link href="http://www.uto.ink/2021/09/27/podman-ideaj-docker-plugin/"/>
    <id>http://www.uto.ink/2021/09/27/podman-ideaj-docker-plugin/</id>
    <published>2021-09-27T05:51:42.000Z</published>
    <updated>2024-02-28T06:35:25.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MacOS连接Linux的Podman-REST-API-service"><a href="#MacOS连接Linux的Podman-REST-API-service" class="headerlink" title="MacOS连接Linux的Podman REST API service"></a>MacOS连接Linux的Podman REST API service</h2><p>由于Podman与Docker一样，不支持在windows和macos上运行。故可以通过在linux系统下的podman开启REST API service。由windows与macos进行远程连接。</p><ol><li><p>Linux下开启Podman REST API service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ vi /lib/systemd/system/podman.service <span class="comment">#增加‘tcp:0.0.0.0:2375 --time=0’开启tcp监听</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Podman API Service</span><br><span class="line">Requires=podman.socket</span><br><span class="line">After=podman.socket</span><br><span class="line">Documentation=man:podman-system-service(1)</span><br><span class="line">StartLimitIntervalSec=0</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Delegate=<span class="literal">true</span></span><br><span class="line">Type=<span class="built_in">exec</span></span><br><span class="line">KillMode=process</span><br><span class="line">Environment=LOGGING=<span class="string">&quot;--log-level=info&quot;</span></span><br><span class="line">ExecStart=/usr/bin/podman <span class="variable">$LOGGING</span> system service tcp:0.0.0.0:2375 --time=0</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=default.target</span><br><span class="line">wujianjun@wujianjun-work:~$ systemctl daemon-reload</span><br><span class="line">wujianjun@wujianjun-work:~$ sudo systemctl restart podman</span><br><span class="line">wujianjun@wujianjun-work:~$ podman --remote info</span><br><span class="line">host:</span><br><span class="line">  arch: amd64</span><br><span class="line">  buildahVersion: 1.22.3</span><br><span class="line">  cgroupControllers: []</span><br><span class="line">  cgroupManager: cgroupfs</span><br><span class="line">  cgroupVersion: v1</span><br><span class="line">wujianjun@wujianjun-work:~$ podman system connection list <span class="comment">#查看当前机器远程连接的列表</span></span><br></pre></td></tr></table></figure><p>接下来MacOS或Windows就可以通过tcp://host:2375进行连接了<br>MacOS下加入远程访问 <code>wujianjun@wujianjun-work ~ % podman system connection add ubuntu tcp://10.84.102.X:2375</code></p></li><li><p>通过Ideaj下Docker Plug-in完成远程连接</p></li></ol><p><img src="/images/docker-plugin-remote-connect.png" alt="Docker插件远程连接"></p><h2 id="程序打包"><a href="#程序打包" class="headerlink" title="程序打包"></a>程序打包</h2><ol><li><p>在需要打包的模块pom.xml的同级目录创建 <strong>Dockerfile</strong> 文件，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM adoptopenjdk/openjdk8:x86_64-ubuntu-jre8u292-b10</span><br><span class="line">ARG MODULE_FILE_NAME</span><br><span class="line">ADD target/$&#123;MODULE_FILE_NAME&#125;.tar.gz /opt/</span><br><span class="line">ENV TZ=Asia/Shanghai MODULE_FILE_NAME=$&#123;MODULE_FILE_NAME&#125;</span><br><span class="line">CMD cd /opt/$&#123;MODULE_FILE_NAME&#125; &amp;&amp; ./bin/app restart &amp;&amp; tail -f ./logs/console.log</span><br></pre></td></tr></table></figure></li><li><p>在上一步的Docker远程连接下配置打包镜像</p></li></ol><p><img src="/images/docker-plugin-image-configuration.png" alt="Docker远程连接"></p><p><code>注意</code>：如果Dockerfile里出现错误（如Add的文件不存在时）会抛出<code>Dockerfile: service-gateway-biz/Dockerfile&#39;: Can&#39;t retrieve image ID from build stream</code>的错误。</p><p><img src="/images/docker-plugin-notice.png" alt="Docker插件使用"></p><p><img src="/images/podman-images.png" alt="Podman远程仓库镜像"></p><p>通过登录进Podman仓库来看，两边的镜像与运行容器实例是一致的。</p><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MacOS连接Linux的Podman-REST-API-service&quot;&gt;&lt;a href=&quot;#MacOS连接Linux的Podman-REST-API-service&quot; class=&quot;headerlink&quot; title=&quot;MacOS连接Linux的Podman </summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Podman" scheme="http://www.uto.ink/tags/Podman/"/>
    
  </entry>
  
  <entry>
    <title>Podman系列之Nexus3私服搭建与使用</title>
    <link href="http://www.uto.ink/2021/09/27/podman-private-svr/"/>
    <id>http://www.uto.ink/2021/09/27/podman-private-svr/</id>
    <published>2021-09-27T03:42:20.000Z</published>
    <updated>2024-02-28T06:35:25.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nexus新建docker仓库"><a href="#Nexus新建docker仓库" class="headerlink" title="Nexus新建docker仓库"></a>Nexus新建docker仓库</h2><p>Nexus的仓库分三类</p><ol><li>docker（proxy）：用于代理其它的hub，类似mirror。</li><li>docker（hosted）：用于上传本地镜像到仓库。</li><li>docker（group）：可将proxy类型和hosted类型的仓库对外统一访问入口（注意不能使用这个地址进行镜像的上传）。</li></ol><p>以下为我的配置：</p><p><code>docker（proxy）</code><br><img src="/images/docker-proxy.png" alt="proxy"></p><p><code>docker（hosted）</code><br><img src="/images/docker-hosted.png" alt="hosted"></p><p><code>docker（group）</code><br><img src="/images/docker-group.png" alt="group"></p><p><code>配置权限</code><br><img src="/images/docker-realms.png" alt="realms"></p><p><code>国内镜像站</code></p><ul><li><a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com</a></li><li><a href="https://registry-1.docker.io/">https://registry-1.docker.io</a></li></ul><h2 id="Nginx反向代理docker仓库"><a href="#Nginx反向代理docker仓库" class="headerlink" title="Nginx反向代理docker仓库"></a>Nginx反向代理docker仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">upstream nexus_docker_group &#123;</span><br><span class="line">    server 10.84.102.90:7793;</span><br><span class="line">&#125;</span><br><span class="line">upstream nexus_docker_hosted &#123;</span><br><span class="line">    server 10.84.102.90:7792;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name mirror.docker.com;</span><br><span class="line"></span><br><span class="line">    access_log logs/docker_mirror.log;</span><br><span class="line"></span><br><span class="line">    client_max_body_size 0;</span><br><span class="line">    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)</span><br><span class="line">    chunked_transfer_encoding on;</span><br><span class="line">    # 设置默认使用推送代理</span><br><span class="line">    set $upstream &quot;nexus_docker_hosted&quot;;</span><br><span class="line">    # 当请求是GET，也就是拉取镜像的时候，这里改为拉取代理，如此便解决了拉取和推送的端口统一</span><br><span class="line">    if ( $request_method ~* &#x27;GET&#x27;) &#123;</span><br><span class="line">        set $upstream &quot;nexus_docker_group&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    # 只有本地仓库才支持搜索，所以将搜索请求转发到本地仓库，否则出现500报错</span><br><span class="line">    if ($request_uri ~ &#x27;/search&#x27;) &#123;</span><br><span class="line">        set $upstream &quot;nexus_docker_group&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://$upstream;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_connect_timeout 3600;</span><br><span class="line">        proxy_send_timeout 3600;</span><br><span class="line">        proxy_read_timeout 3600;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_request_buffering off;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto http;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="podman客户端配置"><a href="#podman客户端配置" class="headerlink" title="podman客户端配置"></a>podman客户端配置</h2><ol><li>注册私服</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ vi /etc/containers/registries.conf</span><br><span class="line">`</span><br><span class="line">unqualified-search-registries = [<span class="string">&quot;mirror.docker.com&quot;</span>]</span><br><span class="line">[[registry]]</span><br><span class="line">location = <span class="string">&quot;mirror.docker.com&quot;</span></span><br><span class="line">insecure = <span class="literal">true</span></span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>注意：<code>insecure</code>设置为true，表示支持http访问</p><ol start="2"><li>重新加载</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo systemctl daemon-reload</span><br><span class="line">wujianjun@wujianjun-work:~$ sudo systemctl restart podman</span><br></pre></td></tr></table></figure><h2 id="测试生效"><a href="#测试生效" class="headerlink" title="测试生效"></a>测试生效</h2><p>接下来以redis镜像来演示效果<br><img src="/images/docker-images-redis.png" alt="docker-images-redis"></p><ol><li>拉取镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman pull redis:latest</span><br><span class="line">Resolved <span class="string">&quot;redis&quot;</span> as an <span class="built_in">alias</span> (/home/wujianjun/.cache/containers/short-name-aliases.conf)</span><br><span class="line">Trying to pull mirror.docker.com/library/redis:latest...</span><br><span class="line">Getting image <span class="built_in">source</span> signatures</span><br><span class="line">Copying blob a330b6cecb98 skipped: already exists  </span><br><span class="line">Copying blob 4f9efe5b47a5 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 6af3a5ca4596 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 14bfbab96d75 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 8b3e2d14a955 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 5da5e1b21a2f <span class="keyword">done</span>  </span><br><span class="line">Copying config 02c7f20544 <span class="keyword">done</span>  </span><br><span class="line">Writing manifest to image destination</span><br><span class="line">Storing signatures</span><br><span class="line">02c7f2054405dadaf295fac7281034e998646996e9768e65a78f90af62218be3</span><br></pre></td></tr></table></figure><p>此时再去私服上可以看到镜像已被镜像到私服上了</p><ol start="2"><li>推送到私服</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman tag redis mirror.docker.com/library/myredis:1.0.0</span><br><span class="line">wujianjun@wujianjun-work:~$ podman push mirror.docker.com/library/myredis:1.0.0</span><br><span class="line">Getting image <span class="built_in">source</span> signatures</span><br><span class="line">Copying blob be5818ef2907 <span class="keyword">done</span>  </span><br><span class="line">Copying blob c54e0c16ea22 <span class="keyword">done</span>  </span><br><span class="line">Copying blob bdad86443e47 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 6a7992ac4800 <span class="keyword">done</span>  </span><br><span class="line">Copying blob be43d2475cf8 <span class="keyword">done</span>  </span><br><span class="line">Copying blob d000633a5681 <span class="keyword">done</span>  </span><br><span class="line">Copying config 02c7f20544 <span class="keyword">done</span>  </span><br><span class="line">Writing manifest to image destination</span><br><span class="line">Storing signatures</span><br></pre></td></tr></table></figure><ol start="3"><li>从私服拉取</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman pull myredis:1.0.0</span><br><span class="line">✔ mirror.docker.com/library/myredis:1.0.0</span><br><span class="line">Trying to pull mirror.docker.com/library/myredis:1.0.0...</span><br><span class="line">Getting image <span class="built_in">source</span> signatures</span><br><span class="line">Copying blob dec078b46822 skipped: already exists  </span><br><span class="line">Copying blob c10395c8d924 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 3c4c5d2db949 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 6f8bb7da49ba <span class="keyword">done</span>  </span><br><span class="line">Copying blob 64906f58d083 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 991f02c53ad6 <span class="keyword">done</span>  </span><br><span class="line">Copying config 02c7f20544 <span class="keyword">done</span>  </span><br><span class="line">Writing manifest to image destination</span><br><span class="line">Storing signatures</span><br><span class="line">02c7f2054405dadaf295fac7281034e998646996e9768e65a78f90af62218be3</span><br><span class="line">wujianjun@wujianjun-work:~$ podman images</span><br><span class="line">REPOSITORY                      TAG         IMAGE ID      CREATED      SIZE</span><br><span class="line">mirror.docker.com/library/myredis       1.0.0       02c7f2054405  3 weeks ago  109 MB</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li><p>未登录私服</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman pull redis:latest</span><br><span class="line">Resolved <span class="string">&quot;redis&quot;</span> as an <span class="built_in">alias</span> (/home/wujianjun/.cache/containers/short-name-aliases.conf)</span><br><span class="line">Trying to pull mirror.docker.com/library/redis:latest...</span><br><span class="line">Error: initializing <span class="built_in">source</span> docker://redis:latest: Requesting bear token: invalid status code from registry 403 (Forbidden)</span><br><span class="line">wujianjun@wujianjun-work:~$ podman login -u developer mirror.docker.com</span><br><span class="line">Password:</span><br><span class="line">Login Succeeded!</span><br><span class="line">wujianjun@wujianjun-work:~$ podman pull redis:latest</span><br><span class="line">Resolved <span class="string">&quot;redis&quot;</span> as an <span class="built_in">alias</span> (/home/wujianjun/.cache/containers/short-name-aliases.conf)</span><br><span class="line">Trying to pull mirror.docker.com/library/redis:latest...</span><br><span class="line">Getting image <span class="built_in">source</span> signatures</span><br><span class="line">Copying blob a330b6cecb98 skipped: already exists  </span><br><span class="line">Copying blob 4f9efe5b47a5 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 6af3a5ca4596 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 14bfbab96d75 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 8b3e2d14a955 <span class="keyword">done</span>  </span><br><span class="line">Copying blob 5da5e1b21a2f <span class="keyword">done</span>  </span><br><span class="line">Copying config 02c7f20544 <span class="keyword">done</span>  </span><br><span class="line">Writing manifest to image destination</span><br><span class="line">Storing signatures</span><br><span class="line">02c7f2054405dadaf295fac7281034e998646996e9768e65a78f90af62218be3</span><br><span class="line">wujianjun@wujianjun-work:~$</span><br><span class="line">wujianjun@wujianjun-work:~$ podman images</span><br><span class="line">REPOSITORY                      TAG         IMAGE ID      CREATED      SIZE</span><br><span class="line">mirror.docker.com/library/redis         latest      02c7f2054405  3 weeks ago  109 MB</span><br></pre></td></tr></table></figure><p>根因分析：由于未登录私服故返回403的错误，已登录的信息会保存在<code>/run/user/1000/containers/auth.json</code>文件中</p></li><li><p>tag没有对应</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman pull myredis:v1.0.0</span><br><span class="line">✔ mirror.docker.com/library/myredis:v1.0.0</span><br><span class="line">Trying to pull mirror.docker.com/library/myredis:v1.0.0...</span><br><span class="line">Error: initializing <span class="built_in">source</span> docker://myredis:v1.0.0: reading manifest v1.0.0 <span class="keyword">in</span> mirror.docker.com/library/myredis: manifest unknown: manifest unknown</span><br></pre></td></tr></table></figure><p>根因分析：由于tag为v1.0.0的myredis镜像没有找到</p></li><li><p>未开启http访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman pull myredis:1.0.0</span><br><span class="line">✔ mirror.docker.com/library/myredis:v1.0.0</span><br><span class="line">Trying to pull mirror.docker.com/library/myredis:1.0.0...</span><br><span class="line">  Get https://mirror.docker.com/v2/: http: server gave HTTP response to HTTPS client</span><br><span class="line">Error: error pulling image <span class="string">&quot;mirror.docker.com/library/myredis&quot;</span>: unable to pull mirror.docker.com/library/myredis: unable to pull image: Error initializing <span class="built_in">source</span> docker://mirror.docker.com/library/myredis:1.0.0: error pinging docker registry mirror.docker.com: Get https://mirror.docker.com/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><p>根因分析：由于在注册私服地址时没有开启<code>insecure = true</code></p></li></ol><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nexus新建docker仓库&quot;&gt;&lt;a href=&quot;#Nexus新建docker仓库&quot; class=&quot;headerlink&quot; title=&quot;Nexus新建docker仓库&quot;&gt;&lt;/a&gt;Nexus新建docker仓库&lt;/h2&gt;&lt;p&gt;Nexus的仓库分三类&lt;/p&gt;
&lt;o</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Podman" scheme="http://www.uto.ink/tags/Podman/"/>
    
  </entry>
  
  <entry>
    <title>Java8 Stream之实例玩转集合的筛选、归约、分组、聚合</title>
    <link href="http://www.uto.ink/2021/09/18/java8-stream/"/>
    <id>http://www.uto.ink/2021/09/18/java8-stream/</id>
    <published>2021-09-18T03:11:57.000Z</published>
    <updated>2024-02-28T06:35:25.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能全景"><a href="#功能全景" class="headerlink" title="功能全景"></a>功能全景</h2><p><img src="/images/java-stream-1.png" alt="Java8Stream全景"></p><h2 id="Stream概述"><a href="#Stream概述" class="headerlink" title="Stream概述"></a>Stream概述</h2><p>Java 8 是一个非常成功的版本，这个版本新增的<code>Stream</code>，配合同版本出现的 <code>Lambda</code> ，给我们操作集合（Collection）提供了极大的便利。</p><p>那么什么是<code>Stream</code>？</p><blockquote><p>Stream将要处理的元素集合看作一种流，在流的过程中，借助Stream API对流中的元素进行操作，比如：筛选、排序、聚合等。</p></blockquote><p>Stream可以由数组或集合创建，对流的操作分为两种：</p><ol><li>中间操作，每次返回一个新的流，可以有多个。</li><li>终端操作，每个流只能进行一次终端操作，终端操作结束后流无法再次使用。终端操作会产生一个新的集合或值。</li></ol><p>另外，Stream有几个特性：</p><ol><li>stream不存储数据，而是按照特定的规则对数据进行计算，一般会输出结果。</li><li>stream不会改变数据源，通常情况下会产生一个新的集合或一个值。</li><li>stream具有延迟执行特性，只有调用终端操作时，中间操作才会执行。</li></ol><h2 id="Stream的创建"><a href="#Stream的创建" class="headerlink" title="Stream的创建"></a>Stream的创建</h2><h3 id="Stream可以通过集合数组创建。"><a href="#Stream可以通过集合数组创建。" class="headerlink" title="Stream可以通过集合数组创建。"></a>Stream可以通过集合数组创建。</h3><ol><li>通过 java.util.Collection.stream()方法用集合创建流</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;);</span><br><span class="line">// 创建一个顺序流</span><br><span class="line">Stream&lt;String&gt; stream = list.stream();</span><br><span class="line">// 创建一个并行流</span><br><span class="line">Stream&lt;String&gt; parallelStream = list.parallelStream();</span><br></pre></td></tr></table></figure><ol start="2"><li>使用java.util.Arrays.stream(T[] array)方法用数组创建流</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] array=&#123;1,3,5,6,8&#125;;</span><br><span class="line">IntStream stream = Arrays.stream(array);</span><br></pre></td></tr></table></figure><ol start="3"><li>使用Stream的静态方法：of()、iterate()、generate()</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(1, 2, 3, 4, 5, 6);</span><br><span class="line"></span><br><span class="line">Stream&lt;Integer&gt; stream2 = Stream.iterate(0, (x) -&gt; x + 3).limit(4);</span><br><span class="line">stream2.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">Stream&lt;Double&gt; stream3 = Stream.generate(Math::random).limit(3);</span><br><span class="line">stream3.forEach(System.out::println);</span><br></pre></td></tr></table></figure><p><strong>stream和parallelStream的简单区分</strong></p><p>stream是顺序流，由主线程按顺序对流执行操作。</p><p>parallelStream是并行流，内部以多线程并行执行的方式对流进行操作，但前提是流中的数据处理没有顺序要求。例如筛选集合中的奇数，两者的处理不同之处：</p><p><img src="/images/java-stream-2.png" alt="stream和parallelStream"></p><p>如果流中的数据量足够大，并行流可以加快处速度。</p><p>除了直接创建并行流，还可以通过parallel()把顺序流转换成并行流：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Integer&gt; findFirst = list.stream().parallel().filter(x-&gt;x&gt;6).findFirst();</span><br></pre></td></tr></table></figure><h2 id="Stream的使用"><a href="#Stream的使用" class="headerlink" title="Stream的使用"></a>Stream的使用</h2><p>在使用stream之前，先理解一个概念：Optional。</p><blockquote><p>Optional类是一个可以为null的容器对象。如果值存在则isPresent()方法会返回true，调用get()方法会返回该对象。 更详细说明请见：菜鸟教程Java 8 Optional类</p></blockquote><p>案例使用的员工类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Anni&quot;, 8200, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Owen&quot;, 9500, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Alisa&quot;, 7900, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">class Person &#123;</span><br><span class="line">    private String name;  // 姓名</span><br><span class="line">    private int salary; // 薪资</span><br><span class="line">    private int age; // 年龄</span><br><span class="line">    private String sex; //性别</span><br><span class="line">    private String area;  // 地区</span><br><span class="line"></span><br><span class="line">    // 构造方法</span><br><span class="line">    public Person(String name, int salary, int age,String sex,String area) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.salary = salary;</span><br><span class="line">        this.age = age;</span><br><span class="line">        this.sex = sex;</span><br><span class="line">        this.area = area;</span><br><span class="line">    &#125;</span><br><span class="line">    // 省略了get和set，请自行添加</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历-匹配（foreach-find-match）"><a href="#遍历-匹配（foreach-find-match）" class="headerlink" title="遍历/匹配（foreach/find/match）"></a>遍历/匹配（foreach/find/match）</h3><p>Stream也是支持类似集合的遍历和匹配元素的，只是Stream中的元素是以Optional类型存在的。Stream的遍历、匹配非常简单。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// import已省略，请自行添加，后面代码亦是</span><br><span class="line">public class StreamTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        List&lt;Integer&gt; list = Arrays.asList(7, 6, 9, 3, 8, 2, 1);</span><br><span class="line"></span><br><span class="line">        // 遍历输出符合条件的元素</span><br><span class="line">        list.stream().filter(x -&gt; x &gt; 6).forEach(System.out::println);</span><br><span class="line">        // 匹配第一个</span><br><span class="line">        Optional&lt;Integer&gt; findFirst = list.stream().filter(x -&gt; x &gt; 6).findFirst();</span><br><span class="line">        // 匹配任意（适用于并行流）</span><br><span class="line">        Optional&lt;Integer&gt; findAny = list.parallelStream().filter(x -&gt; x &gt; 6).findAny();</span><br><span class="line">        // 是否包含符合特定条件的元素</span><br><span class="line">        boolean anyMatch = list.stream().anyMatch(x -&gt; x &lt; 6);</span><br><span class="line">        System.out.println(&quot;匹配第一个值：&quot; + findFirst.get());</span><br><span class="line">        System.out.println(&quot;匹配任意一个值：&quot; + findAny.get());</span><br><span class="line">        System.out.println(&quot;是否存在大于6的值：&quot; + anyMatch);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="筛选（filter）"><a href="#筛选（filter）" class="headerlink" title="筛选（filter）"></a>筛选（filter）</h3><p>筛选，是按照一定的规则校验流中的元素，将符合条件的元素提取到新的流中的操作。</p><ul><li><p>案例一：筛选出Integer集合中大于7的元素，并打印出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        List&lt;Integer&gt; list = Arrays.asList(6, 7, 3, 8, 1, 2, 9);</span><br><span class="line">        Stream&lt;Integer&gt; stream = list.stream();</span><br><span class="line">        stream.filter(x -&gt; x &gt; 7).forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>8 9</p></blockquote></li><li><p>案例二： 筛选员工中工资高于8000的人，并形成新的集合。 形成新集合依赖collect（收集），后文有详细介绍。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">        personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">        personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">        personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line">        personList.add(new Person(&quot;Anni&quot;, 8200, 24, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line">        personList.add(new Person(&quot;Owen&quot;, 9500, 25, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">        personList.add(new Person(&quot;Alisa&quot;, 7900, 26, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; fiterList = personList.stream().filter(x -&gt; x.getSalary() &gt; 8000).map(Person::getName)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        System.out.print(&quot;高于8000的员工姓名：&quot; + fiterList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>高于8000的员工姓名：[Tom, Anni, Owen]</p></blockquote></li></ul><h3 id="聚合（max-min-count"><a href="#聚合（max-min-count" class="headerlink" title="聚合（max/min/count)"></a>聚合（max/min/count)</h3><p>max、min、count这些字眼你一定不陌生，没错，在mysql中我们常用它们进行数据统计。Java stream中也引入了这些概念和用法，极大地方便了我们对集合、数组的数据统计工作。</p><ul><li><p>案例一：获取String集合中最长的元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;String&gt; list = Arrays.asList(&quot;adnm&quot;, &quot;admmt&quot;, &quot;pot&quot;, &quot;xbangd&quot;, &quot;weoujgsd&quot;);</span><br><span class="line"></span><br><span class="line">Optional&lt;String&gt; max = list.stream().max(Comparator.comparing(String::length));</span><br><span class="line">System.out.println(&quot;最长的字符串：&quot; + max.get());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>最长的字符串：weoujgsd</p></blockquote></li><li><p>案例二：获取Integer集合中的最大值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Integer&gt; list = Arrays.asList(7, 6, 9, 4, 11, 6);</span><br><span class="line"></span><br><span class="line">// 自然排序</span><br><span class="line">Optional&lt;Integer&gt; max = list.stream().max(Integer::compareTo);</span><br><span class="line">// 自定义排序</span><br><span class="line">Optional&lt;Integer&gt; max2 = list.stream().max(new Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">@Override</span><br><span class="line">public int compare(Integer o1, Integer o2) &#123;</span><br><span class="line">return o1.compareTo(o2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">System.out.println(&quot;自然排序的最大值：&quot; + max.get());</span><br><span class="line">System.out.println(&quot;自定义排序的最大值：&quot; + max2.get());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>自然排序的最大值：11</p><p>自定义排序的最大值：11</p></blockquote></li><li><p>案例三：获取员工工资最高的人。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Anni&quot;, 8200, 24, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Owen&quot;, 9500, 25, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Alisa&quot;, 7900, 26, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">Optional&lt;Person&gt; max = personList.stream().max(Comparator.comparingInt(Person::getSalary));</span><br><span class="line">System.out.println(&quot;员工工资最大值：&quot; + max.get().getSalary());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>员工工资最大值：9500</p></blockquote></li><li><p>案例四：计算Integer集合中大于6的元素的个数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Integer&gt; list = Arrays.asList(7, 6, 4, 8, 2, 11, 9);</span><br><span class="line"></span><br><span class="line">long count = list.stream().filter(x -&gt; x &gt; 6).count();</span><br><span class="line">System.out.println(&quot;list中大于6的元素个数：&quot; + count);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>list中大于6的元素个数：4</p></blockquote></li></ul><h3 id="映射-map-flatMap"><a href="#映射-map-flatMap" class="headerlink" title="映射(map/flatMap)"></a>映射(map/flatMap)</h3><p>映射，可以将一个流的元素按照一定的映射规则映射到另一个流中。分为map和flatMap：</p><ol><li>map：接收一个函数作为参数，该函数会被应用到每个元素上，并将其映射成一个新的元素。</li><li>flatMap：接收一个函数作为参数，将流中的每个值都换成另一个流，然后把所有流连接成一个流。</li></ol><ul><li><p>案例一：英文字符串数组的元素全部改为大写。整数数组每个元素+3。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">String[] strArr = &#123; &quot;abcd&quot;, &quot;bcdd&quot;, &quot;defde&quot;, &quot;fTr&quot; &#125;;</span><br><span class="line">List&lt;String&gt; strList = Arrays.stream(strArr).map(String::toUpperCase).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; intList = Arrays.asList(1, 3, 5, 7, 9, 11);</span><br><span class="line">List&lt;Integer&gt; intListNew = intList.stream().map(x -&gt; x + 3).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;每个元素大写：&quot; + strList);</span><br><span class="line">System.out.println(&quot;每个元素+3：&quot; + intListNew);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>每个元素大写：[ABCD, BCDD, DEFDE, FTR]</p><p>每个元素+3：[4, 6, 8, 10, 12, 14]</p></blockquote></li><li><p>案例二：将员工的薪资全部增加1000</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Anni&quot;, 8200, 24, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Owen&quot;, 9500, 25, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Alisa&quot;, 7900, 26, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">// 不改变原来员工集合的方式</span><br><span class="line">List&lt;Person&gt; personListNew = personList.stream().map(person -&gt; &#123;</span><br><span class="line">Person personNew = new Person(person.getName(), 0, 0, null, null);</span><br><span class="line">personNew.setSalary(person.getSalary() + 10000);</span><br><span class="line">return personNew;</span><br><span class="line">&#125;).collect(Collectors.toList());</span><br><span class="line">System.out.println(&quot;一次改动前：&quot; + personList.get(0).getName() + &quot;--&gt;&quot; + personList.get(0).getSalary());</span><br><span class="line">System.out.println(&quot;一次改动后：&quot; + personListNew.get(0).getName() + &quot;--&gt;&quot; + personListNew.get(0).getSalary());</span><br><span class="line"></span><br><span class="line">// 改变原来员工集合的方式</span><br><span class="line">List&lt;Person&gt; personListNew2 = personList.stream().map(person -&gt; &#123;</span><br><span class="line">person.setSalary(person.getSalary() + 10000);</span><br><span class="line">return person;</span><br><span class="line">&#125;).collect(Collectors.toList());</span><br><span class="line">System.out.println(&quot;二次改动前：&quot; + personList.get(0).getName() + &quot;--&gt;&quot; + personListNew.get(0).getSalary());</span><br><span class="line">System.out.println(&quot;二次改动后：&quot; + personListNew2.get(0).getName() + &quot;--&gt;&quot; + personListNew.get(0).getSalary());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>一次改动前：Tom–&gt;8900</p><p>一次改动后：Tom–&gt;18900</p><p>二次改动前：Tom–&gt;18900</p><p>二次改动后：Tom–&gt;18900</p></blockquote></li><li><p>案例三：将两个字符数组合并成一个新的字符数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;String&gt; list = Arrays.asList(&quot;m,k,l,a&quot;, &quot;1,3,5,7&quot;);</span><br><span class="line">List&lt;String&gt; listNew = list.stream().flatMap(s -&gt; &#123;</span><br><span class="line">// 将每个元素转换成一个stream</span><br><span class="line">String[] split = s.split(&quot;,&quot;);</span><br><span class="line">Stream&lt;String&gt; s2 = Arrays.stream(split);</span><br><span class="line">return s2;</span><br><span class="line">&#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;处理前的集合：&quot; + list);</span><br><span class="line">System.out.println(&quot;处理后的集合：&quot; + listNew);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>处理前的集合：[m-k-l-a, 1-3-5]</p><p>处理后的集合：[m, k, l, a, 1, 3, 5]</p></blockquote></li></ul><h3 id="归约-reduce"><a href="#归约-reduce" class="headerlink" title="归约(reduce)"></a>归约(reduce)</h3><p>归约，也称缩减，顾名思义，是把一个流缩减成一个值，能实现对集合求和、求乘积和求最值操作。</p><ul><li><p>案例一：求Integer集合的元素之和、乘积和最大值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Integer&gt; list = Arrays.asList(1, 3, 2, 8, 11, 4);</span><br><span class="line">// 求和方式1</span><br><span class="line">Optional&lt;Integer&gt; sum = list.stream().reduce((x, y) -&gt; x + y);</span><br><span class="line">// 求和方式2</span><br><span class="line">Optional&lt;Integer&gt; sum2 = list.stream().reduce(Integer::sum);</span><br><span class="line">// 求和方式3</span><br><span class="line">Integer sum3 = list.stream().reduce(0, Integer::sum);</span><br><span class="line"></span><br><span class="line">// 求乘积</span><br><span class="line">Optional&lt;Integer&gt; product = list.stream().reduce((x, y) -&gt; x * y);</span><br><span class="line"></span><br><span class="line">// 求最大值方式1</span><br><span class="line">Optional&lt;Integer&gt; max = list.stream().reduce((x, y) -&gt; x &gt; y ? x : y);</span><br><span class="line">// 求最大值写法2</span><br><span class="line">Integer max2 = list.stream().reduce(1, Integer::max);</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;list求和：&quot; + sum.get() + &quot;,&quot; + sum2.get() + &quot;,&quot; + sum3);</span><br><span class="line">System.out.println(&quot;list求积：&quot; + product.get());</span><br><span class="line">System.out.println(&quot;list求和：&quot; + max.get() + &quot;,&quot; + max2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>list求和：29,29,29</p><p>list求积：2112</p><p>list求和：11,11</p></blockquote></li><li><p>案例二：求所有员工的工资之和和最高工资。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Anni&quot;, 8200, 24, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Owen&quot;, 9500, 25, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Alisa&quot;, 7900, 26, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">// 求工资之和方式1：</span><br><span class="line">Optional&lt;Integer&gt; sumSalary = personList.stream().map(Person::getSalary).reduce(Integer::sum);</span><br><span class="line">// 求工资之和方式2：</span><br><span class="line">Integer sumSalary2 = personList.stream().reduce(0, (sum, p) -&gt; sum += p.getSalary(),</span><br><span class="line">(sum1, sum2) -&gt; sum1 + sum2);</span><br><span class="line">// 求工资之和方式3：</span><br><span class="line">Integer sumSalary3 = personList.stream().reduce(0, (sum, p) -&gt; sum += p.getSalary(), Integer::sum);</span><br><span class="line"></span><br><span class="line">// 求最高工资方式1：</span><br><span class="line">Integer maxSalary = personList.stream().reduce(0, (max, p) -&gt; max &gt; p.getSalary() ? max : p.getSalary(),</span><br><span class="line">Integer::max);</span><br><span class="line">// 求最高工资方式2：</span><br><span class="line">Integer maxSalary2 = personList.stream().reduce(0, (max, p) -&gt; max &gt; p.getSalary() ? max : p.getSalary(),</span><br><span class="line">(max1, max2) -&gt; max1 &gt; max2 ? max1 : max2);</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;工资之和：&quot; + sumSalary.get() + &quot;,&quot; + sumSalary2 + &quot;,&quot; + sumSalary3);</span><br><span class="line">System.out.println(&quot;最高工资：&quot; + maxSalary + &quot;,&quot; + maxSalary2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>工资之和：49300,49300,49300</p><p>最高工资：9500,9500</p></blockquote></li></ul><h3 id="收集-collect"><a href="#收集-collect" class="headerlink" title="收集(collect)"></a>收集(collect)</h3><p>collect，收集，可以说是内容最繁多、功能最丰富的部分了。从字面上去理解，就是把一个流收集起来，最终可以是收集成一个值也可以收集成一个新的集合。</p><blockquote><p>collect主要依赖java.util.stream.Collectors类内置的静态方法。</p></blockquote><h4 id="归集-toList-toSet-toMap"><a href="#归集-toList-toSet-toMap" class="headerlink" title="归集(toList/toSet/toMap)"></a>归集(toList/toSet/toMap)</h4><p>因为流不存储数据，那么在流中的数据完成处理后，需要将流中的数据重新归集到新的集合里。toList、toSet和toMap比较常用，另外还有toCollection、toConcurrentMap等复杂一些的用法。</p><p>下面用一个案例演示toList、toSet和toMap：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Integer&gt; list = Arrays.asList(1, 6, 3, 4, 6, 7, 9, 6, 20);</span><br><span class="line">List&lt;Integer&gt; listNew = list.stream().filter(x -&gt; x % 2 == 0).collect(Collectors.toList());</span><br><span class="line">Set&lt;Integer&gt; set = list.stream().filter(x -&gt; x % 2 == 0).collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Anni&quot;, 8200, 24, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">Map&lt;?, Person&gt; map = personList.stream().filter(p -&gt; p.getSalary() &gt; 8000)</span><br><span class="line">.collect(Collectors.toMap(Person::getName, p -&gt; p));</span><br><span class="line">System.out.println(&quot;toList:&quot; + listNew);</span><br><span class="line">System.out.println(&quot;toSet:&quot; + set);</span><br><span class="line">System.out.println(&quot;toMap:&quot; + map);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>toList：[6, 4, 6, 6, 20]</p><p>toSet：[4, 20, 6]</p><p>toMap：{Tom=mutest.Person@5fd0d5ae, Anni=mutest.Person@2d98a335}</p></blockquote><h4 id="统计-count-averaging"><a href="#统计-count-averaging" class="headerlink" title="统计(count/averaging)"></a>统计(count/averaging)</h4><p>Collectors提供了一系列用于数据统计的静态方法：</p><ol><li>计数：count</li><li>平均值：averagingInt、averagingLong、averagingDouble</li><li>最值：maxBy、minBy</li><li>求和：summingInt、summingLong、summingDouble</li><li>统计以上所有：summarizingInt、summarizingLong、summarizingDouble</li></ol><p>案例：统计员工人数、平均工资、工资总额、最高工资。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line"></span><br><span class="line">// 求总数</span><br><span class="line">Long count = personList.stream().collect(Collectors.counting());</span><br><span class="line">// 求平均工资</span><br><span class="line">Double average = personList.stream().collect(Collectors.averagingDouble(Person::getSalary));</span><br><span class="line">// 求最高工资</span><br><span class="line">Optional&lt;Integer&gt; max = personList.stream().map(Person::getSalary).collect(Collectors.maxBy(Integer::compare));</span><br><span class="line">// 求工资之和</span><br><span class="line">Integer sum = personList.stream().collect(Collectors.summingInt(Person::getSalary));</span><br><span class="line">// 一次性统计所有信息</span><br><span class="line">DoubleSummaryStatistics collect = personList.stream().collect(Collectors.summarizingDouble(Person::getSalary));</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;员工总数：&quot; + count);</span><br><span class="line">System.out.println(&quot;员工平均工资：&quot; + average);</span><br><span class="line">System.out.println(&quot;员工工资总和：&quot; + sum);</span><br><span class="line">System.out.println(&quot;员工工资所有统计：&quot; + collect);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>员工总数：3</p><p>员工平均工资：7900.0</p><p>员工工资总和：23700</p><p>员工工资所有统计：DoubleSummaryStatistics{count=3, sum=23700.000000,min=7000.000000, average=7900.000000, max=8900.000000}</p></blockquote><h4 id="分组-partitioningBy-groupingBy"><a href="#分组-partitioningBy-groupingBy" class="headerlink" title="分组(partitioningBy/groupingBy)"></a>分组(partitioningBy/groupingBy)</h4><ol><li>分区：将stream按条件分为两个Map，比如员工按薪资是否高于8000分为两部分。</li><li>分组：将集合分为多个Map，比如员工按性别分组。有单级分组和多级分组。</li></ol><p>案例：将员工按薪资是否高于8000分为两部分；将员工按性别和地区分组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Anni&quot;, 8200, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Owen&quot;, 9500, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Alisa&quot;, 7900, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">// 将员工按薪资是否高于8000分组</span><br><span class="line">        Map&lt;Boolean, List&lt;Person&gt;&gt; part = personList.stream().collect(Collectors.partitioningBy(x -&gt; x.getSalary() &gt; 8000));</span><br><span class="line">        // 将员工按性别分组</span><br><span class="line">        Map&lt;String, List&lt;Person&gt;&gt; group = personList.stream().collect(Collectors.groupingBy(Person::getSex));</span><br><span class="line">        // 将员工先按性别分组，再按地区分组</span><br><span class="line">        Map&lt;String, Map&lt;String, List&lt;Person&gt;&gt;&gt; group2 = personList.stream().collect(Collectors.groupingBy(Person::getSex, Collectors.groupingBy(Person::getArea)));</span><br><span class="line">        System.out.println(&quot;员工按薪资是否大于8000分组情况：&quot; + part);</span><br><span class="line">        System.out.println(&quot;员工按性别分组情况：&quot; + group);</span><br><span class="line">        System.out.println(&quot;员工按性别、地区：&quot; + group2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>员工按薪资是否大于8000分组情况：{false=[mutest.Person@2d98a335, mutest.Person@16b98e56, mutest.Person@7ef20235], true=[mutest.Person@27d6c5e0, mutest.Person@4f3f5b24, mutest.Person@15aeb7ab]}</p><p>员工按性别分组情况：{female=[mutest.Person@16b98e56, mutest.Person@4f3f5b24, mutest.Person@7ef20235], male=[mutest.Person@27d6c5e0, mutest.Person@2d98a335, mutest.Person@15aeb7ab]}</p><p>员工按性别、地区：{female={New York=[mutest.Person@4f3f5b24, mutest.Person@7ef20235], Washington=[mutest.Person@16b98e56]}, male={New York=[mutest.Person@27d6c5e0, mutest.Person@15aeb7ab], Washington=[mutest.Person@2d98a335]}}</p></blockquote><h4 id="接合-joining"><a href="#接合-joining" class="headerlink" title="接合(joining)"></a>接合(joining)</h4><p>joining可以将stream中的元素用特定的连接符（没有的话，则直接连接）连接成一个字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line"></span><br><span class="line">String names = personList.stream().map(p -&gt; p.getName()).collect(Collectors.joining(&quot;,&quot;));</span><br><span class="line">System.out.println(&quot;所有员工的姓名：&quot; + names);</span><br><span class="line">List&lt;String&gt; list = Arrays.asList(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;);</span><br><span class="line">String string = list.stream().collect(Collectors.joining(&quot;-&quot;));</span><br><span class="line">System.out.println(&quot;拼接后的字符串：&quot; + string);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>所有员工的姓名：Tom,Jack,Lily</p><p>拼接后的字符串：A-B-C</p></blockquote><h4 id="归约-reducing"><a href="#归约-reducing" class="headerlink" title="归约(reducing)"></a>归约(reducing)</h4><p>Collectors类提供的reducing方法，相比于stream本身的reduce方法，增加了对自定义归约的支持。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 23, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 7000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 7800, 21, &quot;female&quot;, &quot;Washington&quot;));</span><br><span class="line"></span><br><span class="line">// 每个员工减去起征点后的薪资之和（这个例子并不严谨，但一时没想到好的例子）</span><br><span class="line">Integer sum = personList.stream().collect(Collectors.reducing(0, Person::getSalary, (i, j) -&gt; (i + j - 5000)));</span><br><span class="line">System.out.println(&quot;员工扣税薪资总和：&quot; + sum);</span><br><span class="line"></span><br><span class="line">// stream的reduce</span><br><span class="line">Optional&lt;Integer&gt; sum2 = personList.stream().map(Person::getSalary).reduce(Integer::sum);</span><br><span class="line">System.out.println(&quot;员工薪资总和：&quot; + sum2.get());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>员工扣税薪资总和：8700</p><p>员工薪资总和：23700</p></blockquote><h3 id="排序-sorted"><a href="#排序-sorted" class="headerlink" title="排序(sorted)"></a>排序(sorted)</h3><p>sorted，中间操作。有两种排序：</p><ol><li>sorted()：自然排序，流中元素需实现Comparable接口</li><li>sorted(Comparator com)：Comparator排序器自定义排序</li></ol><p>案例：将员工按工资由高到低（工资一样则按年龄由大到小）排序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;Person&gt; personList = new ArrayList&lt;Person&gt;();</span><br><span class="line"></span><br><span class="line">personList.add(new Person(&quot;Sherry&quot;, 9000, 24, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Tom&quot;, 8900, 22, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Jack&quot;, 9000, 25, &quot;male&quot;, &quot;Washington&quot;));</span><br><span class="line">personList.add(new Person(&quot;Lily&quot;, 8800, 26, &quot;male&quot;, &quot;New York&quot;));</span><br><span class="line">personList.add(new Person(&quot;Alisa&quot;, 9000, 26, &quot;female&quot;, &quot;New York&quot;));</span><br><span class="line"></span><br><span class="line">// 按工资升序排序（自然排序）</span><br><span class="line">List&lt;String&gt; newList = personList.stream().sorted(Comparator.comparing(Person::getSalary)).map(Person::getName)</span><br><span class="line">.collect(Collectors.toList());</span><br><span class="line">// 按工资倒序排序</span><br><span class="line">List&lt;String&gt; newList2 = personList.stream().sorted(Comparator.comparing(Person::getSalary).reversed())</span><br><span class="line">.map(Person::getName).collect(Collectors.toList());</span><br><span class="line">// 先按工资再按年龄升序排序</span><br><span class="line">List&lt;String&gt; newList3 = personList.stream()</span><br><span class="line">.sorted(Comparator.comparing(Person::getSalary).thenComparing(Person::getAge)).map(Person::getName)</span><br><span class="line">.collect(Collectors.toList());</span><br><span class="line">// 先按工资再按年龄自定义排序（降序）</span><br><span class="line">List&lt;String&gt; newList4 = personList.stream().sorted((p1, p2) -&gt; &#123;</span><br><span class="line">if (p1.getSalary() == p2.getSalary()) &#123;</span><br><span class="line">return p2.getAge() - p1.getAge();</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return p2.getSalary() - p1.getSalary();</span><br><span class="line">&#125;</span><br><span class="line">&#125;).map(Person::getName).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;按工资升序排序：&quot; + newList);</span><br><span class="line">System.out.println(&quot;按工资降序排序：&quot; + newList2);</span><br><span class="line">System.out.println(&quot;先按工资再按年龄升序排序：&quot; + newList3);</span><br><span class="line">System.out.println(&quot;先按工资再按年龄自定义降序排序：&quot; + newList4);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>按工资升序排序：[Lily, Tom, Sherry, Jack, Alisa]</p><p>按工资降序排序：[Sherry, Jack, Alisa, Tom, Lily]</p><p>先按工资再按年龄升序排序：[Lily, Tom, Sherry, Jack, Alisa]</p><p>先按工资再按年龄自定义降序排序：[Alisa, Jack, Sherry, Tom, Lily]</p></blockquote><h3 id="提取-组合"><a href="#提取-组合" class="headerlink" title="提取/组合"></a>提取/组合</h3><p>流也可以进行合并、去重、限制、跳过等操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class StreamTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">String[] arr1 = &#123; &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; &#125;;</span><br><span class="line">String[] arr2 = &#123; &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot; &#125;;</span><br><span class="line"></span><br><span class="line">Stream&lt;String&gt; stream1 = Stream.of(arr1);</span><br><span class="line">Stream&lt;String&gt; stream2 = Stream.of(arr2);</span><br><span class="line">// concat:合并两个流 distinct：去重</span><br><span class="line">List&lt;String&gt; newList = Stream.concat(stream1, stream2).distinct().collect(Collectors.toList());</span><br><span class="line">// limit：限制从流中获得前n个数据</span><br><span class="line">List&lt;Integer&gt; collect = Stream.iterate(1, x -&gt; x + 2).limit(10).collect(Collectors.toList());</span><br><span class="line">// skip：跳过前n个数据</span><br><span class="line">List&lt;Integer&gt; collect2 = Stream.iterate(1, x -&gt; x + 2).skip(1).limit(5).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;流合并：&quot; + newList);</span><br><span class="line">System.out.println(&quot;limit：&quot; + collect);</span><br><span class="line">System.out.println(&quot;skip：&quot; + collect2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>流合并：[a, b, c, d, e, f, g]</p><p>limit：[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]</p><p>skip：[3, 5, 7, 9, 11]</p></blockquote><hr><p>转载自 <a href="https://blog.csdn.net/mu_wind/article/details/109516995">https://blog.csdn.net/mu_wind/article/details/109516995</a></p><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;功能全景&quot;&gt;&lt;a href=&quot;#功能全景&quot; class=&quot;headerlink&quot; title=&quot;功能全景&quot;&gt;&lt;/a&gt;功能全景&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/java-stream-1.png&quot; alt=&quot;Java8Stream全景&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="转载" scheme="http://www.uto.ink/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>podman系列之ubuntu下podman环境搭建</title>
    <link href="http://www.uto.ink/2021/09/03/podman-env-install/"/>
    <id>http://www.uto.ink/2021/09/03/podman-env-install/</id>
    <published>2021-09-03T14:33:31.000Z</published>
    <updated>2024-02-28T06:56:43.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux环境信息"><a href="#Linux环境信息" class="headerlink" title="Linux环境信息"></a>Linux环境信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ cat /etc/os-release</span><br><span class="line">PRETTY_NAME=&quot;Ubuntu 22.04.1 LTS&quot;</span><br><span class="line">NAME=&quot;Ubuntu&quot;</span><br><span class="line">VERSION_ID=&quot;22.04&quot;</span><br><span class="line">VERSION=&quot;22.04.1 LTS (Jammy Jellyfish)&quot;</span><br><span class="line">VERSION_CODENAME=jammy</span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">HOME_URL=&quot;https://www.ubuntu.com/&quot;</span><br><span class="line">SUPPORT_URL=&quot;https://help.ubuntu.com/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br><span class="line">PRIVACY_POLICY_URL=&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br><span class="line">UBUNTU_CODENAME=jammy</span><br></pre></td></tr></table></figure><h2 id="安装podman"><a href="#安装podman" class="headerlink" title="安装podman"></a>安装podman</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo mkdir -p /etc/apt/keyrings</span><br><span class="line">wujianjun@wujianjun-work:~$ curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key \</span><br><span class="line">  | gpg --dearmor \</span><br><span class="line">  | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg &gt; /dev/null</span><br><span class="line">wujianjun@wujianjun-work:~$ echo \</span><br><span class="line">  &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg] \</span><br><span class="line">    https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /&quot; \</span><br><span class="line">  | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list &gt; /dev/null</span><br><span class="line">wujianjun@wujianjun-work:~$ sudo apt update &amp;&amp; sudo apt -y upgrade</span><br><span class="line">wujianjun@wujianjun-work:~$ sudo apt -y install podman</span><br></pre></td></tr></table></figure><p>速度有点慢。。。</p><h2 id="设置国内镜像源"><a href="#设置国内镜像源" class="headerlink" title="设置国内镜像源"></a>设置国内镜像源</h2><p>由于访问速度慢，可为默认的docker.io添加加速镜像（如果后续自己搭建私服，可将镜像地址设置为私服，则每次pull时会将镜像在私服上保存一份）。<br>详细配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ vi /etc/containers/registries.conf 后面增加</span><br><span class="line">`</span><br><span class="line">[[registry]]</span><br><span class="line">prefix = &quot;docker.io&quot; #需要加速的镜像地址</span><br><span class="line">location = &quot;hub-mirror.c.163.com&quot; #加速器地址，可以为私服地址</span><br><span class="line">insecure = true #支持加速器地址使用http进行访问</span><br><span class="line">`</span><br><span class="line">wujianjun@wujianjun-work:~$ sudo systemctl restart podman</span><br></pre></td></tr></table></figure><h2 id="开机自启podman"><a href="#开机自启podman" class="headerlink" title="开机自启podman"></a>开机自启podman</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo systemctl enable podman</span><br></pre></td></tr></table></figure><h2 id="验证安装版本"><a href="#验证安装版本" class="headerlink" title="验证安装版本"></a>验证安装版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ podman version</span><br><span class="line">Version:      3.2.3</span><br><span class="line">API Version:  3.2.3</span><br><span class="line">Go Version:   go1.15.2</span><br><span class="line">Built:        Thu Jan  1 00:00:00 1970</span><br><span class="line">OS/Arch:      linux/amd64</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="安装podman-compose"><a href="#安装podman-compose" class="headerlink" title="安装podman-compose"></a>安装podman-compose</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo apt install python3-pip</span><br><span class="line">wujianjun@wujianjun-work:~$ pip3 install podman-compose</span><br><span class="line">wujianjun@wujianjun-work:~$ podman-compose --version</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Linux环境信息&quot;&gt;&lt;a href=&quot;#Linux环境信息&quot; class=&quot;headerlink&quot; title=&quot;Linux环境信息&quot;&gt;&lt;/a&gt;Linux环境信息&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="podman" scheme="http://www.uto.ink/tags/podman/"/>
    
  </entry>
  
  <entry>
    <title>内网linux远程访问</title>
    <link href="http://www.uto.ink/2021/09/02/linux-remote/"/>
    <id>http://www.uto.ink/2021/09/02/linux-remote/</id>
    <published>2021-09-02T11:09:51.000Z</published>
    <updated>2024-02-28T06:35:25.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开通ssh远程端口"><a href="#开通ssh远程端口" class="headerlink" title="开通ssh远程端口"></a>开通ssh远程端口</h2><p>通过外网做端口映射出ssh端口(22)之后，通过外网IP进行访问</p><h2 id="安装vpn"><a href="#安装vpn" class="headerlink" title="安装vpn"></a>安装vpn</h2><p>利用vpn软件远程登录进内网进行内网linux的访问</p><h2 id="内网找一台电脑安装软件（如：向日葵、TeamViewer等）"><a href="#内网找一台电脑安装软件（如：向日葵、TeamViewer等）" class="headerlink" title="内网找一台电脑安装软件（如：向日葵、TeamViewer等）"></a>内网找一台电脑安装软件（如：向日葵、TeamViewer等）</h2><h2 id="安装cockpit"><a href="#安装cockpit" class="headerlink" title="安装cockpit"></a>安装cockpit</h2><p>Cockpit是一个Web端的系统管理工具。Cockpit使用系统上已经存在的API。可以在Web界面管理服务、容器、存储等等，还可以配置网络、检查日志都非常方便。</p><p>由于22端口映射过于敏感，可以在内网linux上安装cockpit后，然后再做外网映射（默认9090）映射完成后，则可通过浏览器使用linux登录用户进行登录访问。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>CentOS</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo yum install cockpit</span><br></pre></td></tr></table></figure><p><code>Ubuntu</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo apt install cockpit</span><br></pre></td></tr></table></figure><h3 id="端口更改"><a href="#端口更改" class="headerlink" title="端口更改"></a>端口更改</h3><p>默认端口为9090，如果遇上端口冲突可按以下方式进行修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wujianjun@wujianjun-work:~$ sudo vi /etc/systemd/system/sockets.target.wants/cockpit.socket #更改ListenStream后的端口号</span><br><span class="line">wujianjun@wujianjun-work:~$ sudo systemctl restart cockpit.socket</span><br><span class="line">wujianjun@wujianjun-work:~$ sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开通ssh远程端口&quot;&gt;&lt;a href=&quot;#开通ssh远程端口&quot; class=&quot;headerlink&quot; title=&quot;开通ssh远程端口&quot;&gt;&lt;/a&gt;开通ssh远程端口&lt;/h2&gt;&lt;p&gt;通过外网做端口映射出ssh端口(22)之后，通过外网IP进行访问&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>FindbugsMaven插件集成生成html报告</title>
    <link href="http://www.uto.ink/2021/09/02/code-findbugs-plugin/"/>
    <id>http://www.uto.ink/2021/09/02/code-findbugs-plugin/</id>
    <published>2021-09-02T07:09:40.000Z</published>
    <updated>2024-02-28T06:35:25.244Z</updated>
    
    <content type="html"><![CDATA[<h2 id="maven配置"><a href="#maven配置" class="headerlink" title="maven配置"></a>maven配置</h2><p>在pom.xml中加入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;reporting&gt;</span><br><span class="line">  &lt;plugins&gt;</span><br><span class="line">    &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;findbugs-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.0.5&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">            &lt;effort&gt;Max&lt;/effort&gt;</span><br><span class="line">            &lt;threshold&gt;High&lt;/threshold&gt;</span><br><span class="line">            &lt;xmlOutput&gt;false&lt;/xmlOutput&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">    &lt;/plugin&gt;</span><br><span class="line">  &lt;/plugins&gt;</span><br><span class="line">&lt;/reporting&gt;</span><br><span class="line">&lt;build&gt;</span><br><span class="line">  &lt;plugin&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.9.1&lt;/version&gt;</span><br><span class="line">      &lt;dependencies&gt;</span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">              &lt;groupId&gt;org.apache.maven.doxia&lt;/groupId&gt;</span><br><span class="line">              &lt;artifactId&gt;doxia-site-renderer&lt;/artifactId&gt;</span><br><span class="line">              &lt;version&gt;1.10&lt;/version&gt;</span><br><span class="line">          &lt;/dependency&gt;</span><br><span class="line">      &lt;/dependencies&gt;</span><br><span class="line">  &lt;/plugin&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>在pom.xml所在目录执行<code>mvn compile site</code>生成报告<br>在target/site目录中则能查看到扫描报告</p><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;maven配置&quot;&gt;&lt;a href=&quot;#maven配置&quot; class=&quot;headerlink&quot; title=&quot;maven配置&quot;&gt;&lt;/a&gt;maven配置&lt;/h2&gt;&lt;p&gt;在pom.xml中加入&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>运营之活动策划</title>
    <link href="http://www.uto.ink/2021/08/28/bussiness-market-plan/"/>
    <id>http://www.uto.ink/2021/08/28/bussiness-market-plan/</id>
    <published>2021-08-28T00:57:29.000Z</published>
    <updated>2024-02-28T06:35:25.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运营之活动策划"><a href="#运营之活动策划" class="headerlink" title="运营之活动策划"></a>运营之活动策划</h2><p>日常活动（提升UV、拉新）</p><ul><li>签到</li><li>0点、10点、15点限时兑换、限时秒杀</li><li>抽奖</li><li>会员日专属福利</li><li>邀请码</li><li>虚拟宝贝养成计划<br>业务事件活动（提升复购率）</li><li>消费即返券、消费即返积分</li><li>按消费习惯进行个性推荐<br>热点事件活动（提升UV）</li><li>周年庆</li><li>有奖竞猜</li><li>事件评论、事件转发</li><li>节日</li></ul><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;运营之活动策划&quot;&gt;&lt;a href=&quot;#运营之活动策划&quot; class=&quot;headerlink&quot; title=&quot;运营之活动策划&quot;&gt;&lt;/a&gt;运营之活动策划&lt;/h2&gt;&lt;p&gt;日常活动（提升UV、拉新）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;签到&lt;/li&gt;
&lt;li&gt;0点、10点、15点限</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>业务运营之运营指标</title>
    <link href="http://www.uto.ink/2021/08/26/bussiness-operate-target/"/>
    <id>http://www.uto.ink/2021/08/26/bussiness-operate-target/</id>
    <published>2021-08-26T13:04:02.000Z</published>
    <updated>2024-02-28T06:35:25.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务运营之运营指标"><a href="#业务运营之运营指标" class="headerlink" title="业务运营之运营指标"></a>业务运营之运营指标</h2><ol><li>用户获取</li></ol><ul><li>渠道到达量（曝光量）</li><li>渠道转化率（CPM，CPC，CPS，CPD，CPT等）</li><li>渠道ROI</li><li>日应用下载量</li><li>日新增用户数</li><li>用户获客成本（CAC）</li><li>一次会话用户数</li></ul><ol start="2"><li>用户活跃</li></ol><ul><li>活跃用户（DAU、WAU、MAU）</li><li>PV和UV</li><li>用户会话次数</li><li>用户访问时长</li><li>功能使用率</li></ul><ol start="3"><li>用户留存</li></ol><ul><li>留存率</li><li>用户流失率</li><li>退出率</li></ul><ol start="4"><li>营销</li></ol><ul><li>用户生命周期</li><li>用户生命周期价值</li><li>客户/用户忠诚指数</li><li>客户/用户流失指数</li><li>客户/用户价值指数（RMF模型和PCA模型）</li></ul><ol start="5"><li>传播/活动</li></ol><ul><li>K因子</li><li>病毒传播周期</li><li>用户分享率</li><li>活动曝光量/浏览量</li><li>活动参与率</li></ul><ol start="6"><li>营收</li></ol><ul><li>活跃交易用户数</li><li>GMV</li><li>客单价</li><li>复购率</li><li>退货率</li></ul><hr><p><em>观点仅代表自己，期待你的留言。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;业务运营之运营指标&quot;&gt;&lt;a href=&quot;#业务运营之运营指标&quot; class=&quot;headerlink&quot; title=&quot;业务运营之运营指标&quot;&gt;&lt;/a&gt;业务运营之运营指标&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;用户获取&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;渠道到达量（曝光量）&lt;</summary>
      
    
    
    
    
    <category term="原创" scheme="http://www.uto.ink/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
</feed>
